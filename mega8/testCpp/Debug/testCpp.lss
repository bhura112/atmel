
testCpp.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000004a6  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000010  00800060  000004a6  0000053a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000004  00800070  00800070  0000054a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000054a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000057c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000005b8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002001  00000000  00000000  00000710  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e6a  00000000  00000000  00002711  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006e9  00000000  00000000  0000357b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000027c  00000000  00000000  00003c64  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007ef  00000000  00000000  00003ee0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000774  00000000  00000000  000046cf  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000f8  00000000  00000000  00004e43  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	12 c0       	rjmp	.+36     	; 0x26 <__ctors_end>
   2:	2c c0       	rjmp	.+88     	; 0x5c <__bad_interrupt>
   4:	2b c0       	rjmp	.+86     	; 0x5c <__bad_interrupt>
   6:	2a c0       	rjmp	.+84     	; 0x5c <__bad_interrupt>
   8:	29 c0       	rjmp	.+82     	; 0x5c <__bad_interrupt>
   a:	28 c0       	rjmp	.+80     	; 0x5c <__bad_interrupt>
   c:	27 c0       	rjmp	.+78     	; 0x5c <__bad_interrupt>
   e:	26 c0       	rjmp	.+76     	; 0x5c <__bad_interrupt>
  10:	25 c0       	rjmp	.+74     	; 0x5c <__bad_interrupt>
  12:	24 c0       	rjmp	.+72     	; 0x5c <__bad_interrupt>
  14:	23 c0       	rjmp	.+70     	; 0x5c <__bad_interrupt>
  16:	22 c0       	rjmp	.+68     	; 0x5c <__bad_interrupt>
  18:	21 c0       	rjmp	.+66     	; 0x5c <__bad_interrupt>
  1a:	20 c0       	rjmp	.+64     	; 0x5c <__bad_interrupt>
  1c:	1f c0       	rjmp	.+62     	; 0x5c <__bad_interrupt>
  1e:	1e c0       	rjmp	.+60     	; 0x5c <__bad_interrupt>
  20:	1d c0       	rjmp	.+58     	; 0x5c <__bad_interrupt>
  22:	1c c0       	rjmp	.+56     	; 0x5c <__bad_interrupt>
  24:	1b c0       	rjmp	.+54     	; 0x5c <__bad_interrupt>

00000026 <__ctors_end>:
  26:	11 24       	eor	r1, r1
  28:	1f be       	out	0x3f, r1	; 63
  2a:	cf e5       	ldi	r28, 0x5F	; 95
  2c:	d4 e0       	ldi	r29, 0x04	; 4
  2e:	de bf       	out	0x3e, r29	; 62
  30:	cd bf       	out	0x3d, r28	; 61

00000032 <__do_copy_data>:
  32:	10 e0       	ldi	r17, 0x00	; 0
  34:	a0 e6       	ldi	r26, 0x60	; 96
  36:	b0 e0       	ldi	r27, 0x00	; 0
  38:	e6 ea       	ldi	r30, 0xA6	; 166
  3a:	f4 e0       	ldi	r31, 0x04	; 4
  3c:	02 c0       	rjmp	.+4      	; 0x42 <__SREG__+0x3>
  3e:	05 90       	lpm	r0, Z+
  40:	0d 92       	st	X+, r0
  42:	a0 37       	cpi	r26, 0x70	; 112
  44:	b1 07       	cpc	r27, r17
  46:	d9 f7       	brne	.-10     	; 0x3e <__SP_H__>

00000048 <__do_clear_bss>:
  48:	20 e0       	ldi	r18, 0x00	; 0
  4a:	a0 e7       	ldi	r26, 0x70	; 112
  4c:	b0 e0       	ldi	r27, 0x00	; 0
  4e:	01 c0       	rjmp	.+2      	; 0x52 <.do_clear_bss_start>

00000050 <.do_clear_bss_loop>:
  50:	1d 92       	st	X+, r1

00000052 <.do_clear_bss_start>:
  52:	a4 37       	cpi	r26, 0x74	; 116
  54:	b2 07       	cpc	r27, r18
  56:	e1 f7       	brne	.-8      	; 0x50 <.do_clear_bss_loop>
  58:	e2 d0       	rcall	.+452    	; 0x21e <main>
  5a:	23 c2       	rjmp	.+1094   	; 0x4a2 <_exit>

0000005c <__bad_interrupt>:
  5c:	d1 cf       	rjmp	.-94     	; 0x0 <__vectors>

0000005e <_Znwj>:
	{ 0x11, 0x12, 0x10 } //portD
};

void * operator new(size_t size) {
	
	return malloc(size);
  5e:	00 d1       	rcall	.+512    	; 0x260 <malloc>
}
  60:	08 95       	ret

00000062 <_ZN11ButtonClassC1Ehh>:
ButtonClass::ButtonClass(unsigned char p,unsigned char n)
: GpioClass(p,n,INPUT) {
	
}

ButtonClass::~ButtonClass()
  62:	20 e0       	ldi	r18, 0x00	; 0
  64:	7c d0       	rcall	.+248    	; 0x15e <_ZN9GpioClassC1Ehhb>
  66:	08 95       	ret

00000068 <_ZN11ButtonClass4readEv>:

}

ButtonClass::ButtonState_t ButtonClass::read() {
	
	return getState();
  68:	92 d0       	rcall	.+292    	; 0x18e <_ZN9GpioClass8getStateEv>
}
  6a:	08 95       	ret

0000006c <_ZN9GpioClassC1Ev>:
 }

 GpioClass::~GpioClass() {
	 setState(LOW);
	 setDirection(INPUT);
 }
  6c:	fc 01       	movw	r30, r24
  6e:	10 82       	st	Z, r1
  70:	11 82       	std	Z+1, r1	; 0x01
  72:	82 81       	ldd	r24, Z+2	; 0x02
  74:	81 60       	ori	r24, 0x01	; 1
  76:	82 83       	std	Z+2, r24	; 0x02
  78:	82 81       	ldd	r24, Z+2	; 0x02
  7a:	8d 7f       	andi	r24, 0xFD	; 253
  7c:	82 83       	std	Z+2, r24	; 0x02
  7e:	08 95       	ret

00000080 <_ZN9GpioClass12setDirectionEb>:
  80:	dc 01       	movw	r26, r24
  82:	96 2f       	mov	r25, r22
  84:	2c 91       	ld	r18, X
  86:	30 e0       	ldi	r19, 0x00	; 0
  88:	f9 01       	movw	r30, r18
  8a:	ee 0f       	add	r30, r30
  8c:	ff 1f       	adc	r31, r31
  8e:	2e 0f       	add	r18, r30
  90:	3f 1f       	adc	r19, r31
  92:	f9 01       	movw	r30, r18
  94:	ea 59       	subi	r30, 0x9A	; 154
  96:	ff 4f       	sbci	r31, 0xFF	; 255
  98:	e0 81       	ld	r30, Z
  9a:	f0 e0       	ldi	r31, 0x00	; 0
  9c:	40 a1       	ldd	r20, Z+32	; 0x20
  9e:	11 96       	adiw	r26, 0x01	; 1
  a0:	5c 91       	ld	r21, X
  a2:	11 97       	sbiw	r26, 0x01	; 1
  a4:	21 e0       	ldi	r18, 0x01	; 1
  a6:	30 e0       	ldi	r19, 0x00	; 0
  a8:	b9 01       	movw	r22, r18
  aa:	05 2e       	mov	r0, r21
  ac:	02 c0       	rjmp	.+4      	; 0xb2 <_ZN9GpioClass12setDirectionEb+0x32>
  ae:	66 0f       	add	r22, r22
  b0:	77 1f       	adc	r23, r23
  b2:	0a 94       	dec	r0
  b4:	e2 f7       	brpl	.-8      	; 0xae <_ZN9GpioClass12setDirectionEb+0x2e>
  b6:	60 95       	com	r22
  b8:	86 2f       	mov	r24, r22
  ba:	84 23       	and	r24, r20
  bc:	69 2f       	mov	r22, r25
  be:	70 e0       	ldi	r23, 0x00	; 0
  c0:	02 c0       	rjmp	.+4      	; 0xc6 <_ZN9GpioClass12setDirectionEb+0x46>
  c2:	66 0f       	add	r22, r22
  c4:	77 1f       	adc	r23, r23
  c6:	5a 95       	dec	r21
  c8:	e2 f7       	brpl	.-8      	; 0xc2 <_ZN9GpioClass12setDirectionEb+0x42>
  ca:	68 2b       	or	r22, r24
  cc:	60 a3       	std	Z+32, r22	; 0x20
  ce:	11 96       	adiw	r26, 0x01	; 1
  d0:	0c 90       	ld	r0, X
  d2:	11 97       	sbiw	r26, 0x01	; 1
  d4:	02 c0       	rjmp	.+4      	; 0xda <_ZN9GpioClass12setDirectionEb+0x5a>
  d6:	22 0f       	add	r18, r18
  d8:	33 1f       	adc	r19, r19
  da:	0a 94       	dec	r0
  dc:	e2 f7       	brpl	.-8      	; 0xd6 <_ZN9GpioClass12setDirectionEb+0x56>
  de:	62 23       	and	r22, r18
  e0:	12 96       	adiw	r26, 0x02	; 2
  e2:	8c 91       	ld	r24, X
  e4:	12 97       	sbiw	r26, 0x02	; 2
  e6:	60 fb       	bst	r22, 0
  e8:	80 f9       	bld	r24, 0
  ea:	12 96       	adiw	r26, 0x02	; 2
  ec:	8c 93       	st	X, r24
  ee:	08 95       	ret

000000f0 <_ZN9GpioClass8setStateEb>:
  f0:	dc 01       	movw	r26, r24
  f2:	96 2f       	mov	r25, r22
  f4:	2c 91       	ld	r18, X
  f6:	30 e0       	ldi	r19, 0x00	; 0
  f8:	f9 01       	movw	r30, r18
  fa:	ee 0f       	add	r30, r30
  fc:	ff 1f       	adc	r31, r31
  fe:	2e 0f       	add	r18, r30
 100:	3f 1f       	adc	r19, r31
 102:	f9 01       	movw	r30, r18
 104:	ea 59       	subi	r30, 0x9A	; 154
 106:	ff 4f       	sbci	r31, 0xFF	; 255
 108:	e1 81       	ldd	r30, Z+1	; 0x01
 10a:	f0 e0       	ldi	r31, 0x00	; 0
 10c:	60 a1       	ldd	r22, Z+32	; 0x20
 10e:	11 96       	adiw	r26, 0x01	; 1
 110:	8c 91       	ld	r24, X
 112:	11 97       	sbiw	r26, 0x01	; 1
 114:	41 e0       	ldi	r20, 0x01	; 1
 116:	50 e0       	ldi	r21, 0x00	; 0
 118:	08 2e       	mov	r0, r24
 11a:	02 c0       	rjmp	.+4      	; 0x120 <_ZN9GpioClass8setStateEb+0x30>
 11c:	44 0f       	add	r20, r20
 11e:	55 1f       	adc	r21, r21
 120:	0a 94       	dec	r0
 122:	e2 f7       	brpl	.-8      	; 0x11c <_ZN9GpioClass8setStateEb+0x2c>
 124:	40 95       	com	r20
 126:	46 23       	and	r20, r22
 128:	69 2f       	mov	r22, r25
 12a:	70 e0       	ldi	r23, 0x00	; 0
 12c:	02 c0       	rjmp	.+4      	; 0x132 <_ZN9GpioClass8setStateEb+0x42>
 12e:	66 0f       	add	r22, r22
 130:	77 1f       	adc	r23, r23
 132:	8a 95       	dec	r24
 134:	e2 f7       	brpl	.-8      	; 0x12e <_ZN9GpioClass8setStateEb+0x3e>
 136:	64 2b       	or	r22, r20
 138:	60 a3       	std	Z+32, r22	; 0x20
 13a:	26 2f       	mov	r18, r22
 13c:	30 e0       	ldi	r19, 0x00	; 0
 13e:	11 96       	adiw	r26, 0x01	; 1
 140:	0c 90       	ld	r0, X
 142:	11 97       	sbiw	r26, 0x01	; 1
 144:	02 c0       	rjmp	.+4      	; 0x14a <_ZN9GpioClass8setStateEb+0x5a>
 146:	35 95       	asr	r19
 148:	27 95       	ror	r18
 14a:	0a 94       	dec	r0
 14c:	e2 f7       	brpl	.-8      	; 0x146 <_ZN9GpioClass8setStateEb+0x56>
 14e:	12 96       	adiw	r26, 0x02	; 2
 150:	8c 91       	ld	r24, X
 152:	12 97       	sbiw	r26, 0x02	; 2
 154:	20 fb       	bst	r18, 0
 156:	81 f9       	bld	r24, 1
 158:	12 96       	adiw	r26, 0x02	; 2
 15a:	8c 93       	st	X, r24
 15c:	08 95       	ret

0000015e <_ZN9GpioClassC1Ehhb>:
 15e:	cf 93       	push	r28
 160:	df 93       	push	r29
 162:	ec 01       	movw	r28, r24
 164:	68 83       	st	Y, r22
 166:	49 83       	std	Y+1, r20	; 0x01
 168:	8a 81       	ldd	r24, Y+2	; 0x02
 16a:	20 fb       	bst	r18, 0
 16c:	80 f9       	bld	r24, 0
 16e:	8a 83       	std	Y+2, r24	; 0x02
 170:	8a 81       	ldd	r24, Y+2	; 0x02
 172:	8d 7f       	andi	r24, 0xFD	; 253
 174:	8a 83       	std	Y+2, r24	; 0x02
 176:	6a 81       	ldd	r22, Y+2	; 0x02
 178:	61 70       	andi	r22, 0x01	; 1
 17a:	ce 01       	movw	r24, r28
 17c:	81 df       	rcall	.-254    	; 0x80 <_ZN9GpioClass12setDirectionEb>
 17e:	6a 81       	ldd	r22, Y+2	; 0x02
 180:	66 95       	lsr	r22
 182:	61 70       	andi	r22, 0x01	; 1
 184:	ce 01       	movw	r24, r28
 186:	b4 df       	rcall	.-152    	; 0xf0 <_ZN9GpioClass8setStateEb>
 188:	df 91       	pop	r29
 18a:	cf 91       	pop	r28
 18c:	08 95       	ret

0000018e <_ZN9GpioClass8getStateEv>:
	 
	 state = (regValue & (1 << pin)) ? 1:0;
	 
 }

 GpioClass::GpioState_t GpioClass::getState() {
 18e:	dc 01       	movw	r26, r24
	 
	 unsigned char GSfrRegAddr =  GpioPortSfrAddress[port][GPIO_INPUT_REG];
 190:	2c 91       	ld	r18, X
 192:	30 e0       	ldi	r19, 0x00	; 0
 194:	f9 01       	movw	r30, r18
 196:	ee 0f       	add	r30, r30
 198:	ff 1f       	adc	r31, r31
 19a:	2e 0f       	add	r18, r30
 19c:	3f 1f       	adc	r19, r31
 19e:	f9 01       	movw	r30, r18
 1a0:	ea 59       	subi	r30, 0x9A	; 154
 1a2:	ff 4f       	sbci	r31, 0xFF	; 255
 1a4:	e2 81       	ldd	r30, Z+2	; 0x02
	 unsigned char regValue = _SFR_IO8(GSfrRegAddr);
 1a6:	f0 e0       	ldi	r31, 0x00	; 0
 1a8:	80 a1       	ldd	r24, Z+32	; 0x20
	 
	 state = (regValue & (1 << pin)) ? 1:0;
 1aa:	90 e0       	ldi	r25, 0x00	; 0
 1ac:	11 96       	adiw	r26, 0x01	; 1
 1ae:	0c 90       	ld	r0, X
 1b0:	11 97       	sbiw	r26, 0x01	; 1
 1b2:	02 c0       	rjmp	.+4      	; 0x1b8 <_ZN9GpioClass8getStateEv+0x2a>
 1b4:	95 95       	asr	r25
 1b6:	87 95       	ror	r24
 1b8:	0a 94       	dec	r0
 1ba:	e2 f7       	brpl	.-8      	; 0x1b4 <_ZN9GpioClass8getStateEv+0x26>
 1bc:	12 96       	adiw	r26, 0x02	; 2
 1be:	9c 91       	ld	r25, X
 1c0:	12 97       	sbiw	r26, 0x02	; 2
 1c2:	80 fb       	bst	r24, 0
 1c4:	91 f9       	bld	r25, 1
 1c6:	12 96       	adiw	r26, 0x02	; 2
 1c8:	9c 93       	st	X, r25
 1ca:	12 97       	sbiw	r26, 0x02	; 2
	 
	 return (GpioState_t)state;
 1cc:	12 96       	adiw	r26, 0x02	; 2
 1ce:	8c 91       	ld	r24, X
 }
 1d0:	86 95       	lsr	r24
 1d2:	81 70       	andi	r24, 0x01	; 1
 1d4:	08 95       	ret

000001d6 <_ZN8LcdClassC1Ev>:
 *  Author: HP
 */ 
#include "LcdClass.h"


 LcdClass::LcdClass()
 1d6:	0f 93       	push	r16
 1d8:	1f 93       	push	r17
 1da:	cf 93       	push	r28
 1dc:	df 93       	push	r29
 1de:	ec 01       	movw	r28, r24
 1e0:	45 df       	rcall	.-374    	; 0x6c <_ZN9GpioClassC1Ev>
 1e2:	ce 01       	movw	r24, r28
 1e4:	03 96       	adiw	r24, 0x03	; 3
 1e6:	42 df       	rcall	.-380    	; 0x6c <_ZN9GpioClassC1Ev>
 1e8:	ce 01       	movw	r24, r28
 1ea:	06 96       	adiw	r24, 0x06	; 6
 1ec:	3f df       	rcall	.-386    	; 0x6c <_ZN9GpioClassC1Ev>
 1ee:	ce 01       	movw	r24, r28
 1f0:	09 96       	adiw	r24, 0x09	; 9
 1f2:	3c df       	rcall	.-392    	; 0x6c <_ZN9GpioClassC1Ev>
 1f4:	2c 96       	adiw	r28, 0x0c	; 12
 1f6:	07 e0       	ldi	r16, 0x07	; 7
 1f8:	10 e0       	ldi	r17, 0x00	; 0
 1fa:	0f 3f       	cpi	r16, 0xFF	; 255
 1fc:	8f ef       	ldi	r24, 0xFF	; 255
 1fe:	18 07       	cpc	r17, r24
 200:	31 f0       	breq	.+12     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
 202:	ce 01       	movw	r24, r28
 204:	33 df       	rcall	.-410    	; 0x6c <_ZN9GpioClassC1Ev>
 206:	23 96       	adiw	r28, 0x03	; 3
 208:	01 50       	subi	r16, 0x01	; 1
 20a:	11 09       	sbc	r17, r1
 20c:	f6 cf       	rjmp	.-20     	; 0x1fa <_ZN8LcdClassC1Ev+0x24>
 {

 }
 20e:	df 91       	pop	r29
 210:	cf 91       	pop	r28
 212:	1f 91       	pop	r17
 214:	0f 91       	pop	r16
 216:	08 95       	ret

00000218 <_ZN8LedClassC1Ehh>:
: GpioClass() {
	
}

LedClass::LedClass(unsigned char p,unsigned char n)
: GpioClass(p,n,OUTPUT) {
 218:	21 e0       	ldi	r18, 0x01	; 1
 21a:	a1 df       	rcall	.-190    	; 0x15e <_ZN9GpioClassC1Ehhb>
 21c:	08 95       	ret

0000021e <main>:
#include "LedClass.h"
#include "ButtonClass.h"
#include "LcdClass.h"

int main(void)
{
 21e:	cf 93       	push	r28
 220:	df 93       	push	r29
 222:	cd b7       	in	r28, 0x3d	; 61
 224:	de b7       	in	r29, 0x3e	; 62
 226:	a4 97       	sbiw	r28, 0x24	; 36
 228:	0f b6       	in	r0, 0x3f	; 63
 22a:	f8 94       	cli
 22c:	de bf       	out	0x3e, r29	; 62
 22e:	0f be       	out	0x3f, r0	; 63
 230:	cd bf       	out	0x3d, r28	; 61
    
	LedClass *redLed = new LedClass(GPIO_PORT_B,0);
 232:	83 e0       	ldi	r24, 0x03	; 3
 234:	90 e0       	ldi	r25, 0x00	; 0
 236:	13 df       	rcall	.-474    	; 0x5e <_Znwj>
 238:	7c 01       	movw	r14, r24
 23a:	40 e0       	ldi	r20, 0x00	; 0
 23c:	60 e0       	ldi	r22, 0x00	; 0
 23e:	ec df       	rcall	.-40     	; 0x218 <_ZN8LedClassC1Ehh>
	ButtonClass *switch1 = new ButtonClass(GPIO_PORT_B,1);
 240:	83 e0       	ldi	r24, 0x03	; 3
 242:	90 e0       	ldi	r25, 0x00	; 0
 244:	0c df       	rcall	.-488    	; 0x5e <_Znwj>
 246:	8c 01       	movw	r16, r24
 248:	41 e0       	ldi	r20, 0x01	; 1
 24a:	60 e0       	ldi	r22, 0x00	; 0
 24c:	0a df       	rcall	.-492    	; 0x62 <_ZN11ButtonClassC1Ehh>
	LcdClass lcd;
 24e:	ce 01       	movw	r24, r28
 250:	01 96       	adiw	r24, 0x01	; 1
 252:	c1 df       	rcall	.-126    	; 0x1d6 <_ZN8LcdClassC1Ev>
	
    while (1) 
    {
		redLed->setState(switch1->read());
 254:	c8 01       	movw	r24, r16
 256:	08 df       	rcall	.-496    	; 0x68 <_ZN11ButtonClass4readEv>
 258:	68 2f       	mov	r22, r24
 25a:	c7 01       	movw	r24, r14
 25c:	49 df       	rcall	.-366    	; 0xf0 <_ZN9GpioClass8setStateEb>
 25e:	fa cf       	rjmp	.-12     	; 0x254 <main+0x36>

00000260 <malloc>:
 260:	0f 93       	push	r16
 262:	1f 93       	push	r17
 264:	cf 93       	push	r28
 266:	df 93       	push	r29
 268:	82 30       	cpi	r24, 0x02	; 2
 26a:	91 05       	cpc	r25, r1
 26c:	10 f4       	brcc	.+4      	; 0x272 <malloc+0x12>
 26e:	82 e0       	ldi	r24, 0x02	; 2
 270:	90 e0       	ldi	r25, 0x00	; 0
 272:	e0 91 72 00 	lds	r30, 0x0072	; 0x800072 <__flp>
 276:	f0 91 73 00 	lds	r31, 0x0073	; 0x800073 <__flp+0x1>
 27a:	20 e0       	ldi	r18, 0x00	; 0
 27c:	30 e0       	ldi	r19, 0x00	; 0
 27e:	a0 e0       	ldi	r26, 0x00	; 0
 280:	b0 e0       	ldi	r27, 0x00	; 0
 282:	30 97       	sbiw	r30, 0x00	; 0
 284:	19 f1       	breq	.+70     	; 0x2cc <malloc+0x6c>
 286:	40 81       	ld	r20, Z
 288:	51 81       	ldd	r21, Z+1	; 0x01
 28a:	02 81       	ldd	r16, Z+2	; 0x02
 28c:	13 81       	ldd	r17, Z+3	; 0x03
 28e:	48 17       	cp	r20, r24
 290:	59 07       	cpc	r21, r25
 292:	c8 f0       	brcs	.+50     	; 0x2c6 <malloc+0x66>
 294:	84 17       	cp	r24, r20
 296:	95 07       	cpc	r25, r21
 298:	69 f4       	brne	.+26     	; 0x2b4 <malloc+0x54>
 29a:	10 97       	sbiw	r26, 0x00	; 0
 29c:	31 f0       	breq	.+12     	; 0x2aa <malloc+0x4a>
 29e:	12 96       	adiw	r26, 0x02	; 2
 2a0:	0c 93       	st	X, r16
 2a2:	12 97       	sbiw	r26, 0x02	; 2
 2a4:	13 96       	adiw	r26, 0x03	; 3
 2a6:	1c 93       	st	X, r17
 2a8:	27 c0       	rjmp	.+78     	; 0x2f8 <malloc+0x98>
 2aa:	00 93 72 00 	sts	0x0072, r16	; 0x800072 <__flp>
 2ae:	10 93 73 00 	sts	0x0073, r17	; 0x800073 <__flp+0x1>
 2b2:	22 c0       	rjmp	.+68     	; 0x2f8 <malloc+0x98>
 2b4:	21 15       	cp	r18, r1
 2b6:	31 05       	cpc	r19, r1
 2b8:	19 f0       	breq	.+6      	; 0x2c0 <malloc+0x60>
 2ba:	42 17       	cp	r20, r18
 2bc:	53 07       	cpc	r21, r19
 2be:	18 f4       	brcc	.+6      	; 0x2c6 <malloc+0x66>
 2c0:	9a 01       	movw	r18, r20
 2c2:	bd 01       	movw	r22, r26
 2c4:	ef 01       	movw	r28, r30
 2c6:	df 01       	movw	r26, r30
 2c8:	f8 01       	movw	r30, r16
 2ca:	db cf       	rjmp	.-74     	; 0x282 <malloc+0x22>
 2cc:	21 15       	cp	r18, r1
 2ce:	31 05       	cpc	r19, r1
 2d0:	f9 f0       	breq	.+62     	; 0x310 <malloc+0xb0>
 2d2:	28 1b       	sub	r18, r24
 2d4:	39 0b       	sbc	r19, r25
 2d6:	24 30       	cpi	r18, 0x04	; 4
 2d8:	31 05       	cpc	r19, r1
 2da:	80 f4       	brcc	.+32     	; 0x2fc <malloc+0x9c>
 2dc:	8a 81       	ldd	r24, Y+2	; 0x02
 2de:	9b 81       	ldd	r25, Y+3	; 0x03
 2e0:	61 15       	cp	r22, r1
 2e2:	71 05       	cpc	r23, r1
 2e4:	21 f0       	breq	.+8      	; 0x2ee <malloc+0x8e>
 2e6:	fb 01       	movw	r30, r22
 2e8:	93 83       	std	Z+3, r25	; 0x03
 2ea:	82 83       	std	Z+2, r24	; 0x02
 2ec:	04 c0       	rjmp	.+8      	; 0x2f6 <malloc+0x96>
 2ee:	90 93 73 00 	sts	0x0073, r25	; 0x800073 <__flp+0x1>
 2f2:	80 93 72 00 	sts	0x0072, r24	; 0x800072 <__flp>
 2f6:	fe 01       	movw	r30, r28
 2f8:	32 96       	adiw	r30, 0x02	; 2
 2fa:	44 c0       	rjmp	.+136    	; 0x384 <malloc+0x124>
 2fc:	fe 01       	movw	r30, r28
 2fe:	e2 0f       	add	r30, r18
 300:	f3 1f       	adc	r31, r19
 302:	81 93       	st	Z+, r24
 304:	91 93       	st	Z+, r25
 306:	22 50       	subi	r18, 0x02	; 2
 308:	31 09       	sbc	r19, r1
 30a:	39 83       	std	Y+1, r19	; 0x01
 30c:	28 83       	st	Y, r18
 30e:	3a c0       	rjmp	.+116    	; 0x384 <malloc+0x124>
 310:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__data_end>
 314:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__data_end+0x1>
 318:	23 2b       	or	r18, r19
 31a:	41 f4       	brne	.+16     	; 0x32c <malloc+0xcc>
 31c:	20 91 62 00 	lds	r18, 0x0062	; 0x800062 <__malloc_heap_start>
 320:	30 91 63 00 	lds	r19, 0x0063	; 0x800063 <__malloc_heap_start+0x1>
 324:	30 93 71 00 	sts	0x0071, r19	; 0x800071 <__data_end+0x1>
 328:	20 93 70 00 	sts	0x0070, r18	; 0x800070 <__data_end>
 32c:	20 91 60 00 	lds	r18, 0x0060	; 0x800060 <__data_start>
 330:	30 91 61 00 	lds	r19, 0x0061	; 0x800061 <__data_start+0x1>
 334:	21 15       	cp	r18, r1
 336:	31 05       	cpc	r19, r1
 338:	41 f4       	brne	.+16     	; 0x34a <malloc+0xea>
 33a:	2d b7       	in	r18, 0x3d	; 61
 33c:	3e b7       	in	r19, 0x3e	; 62
 33e:	40 91 64 00 	lds	r20, 0x0064	; 0x800064 <__malloc_margin>
 342:	50 91 65 00 	lds	r21, 0x0065	; 0x800065 <__malloc_margin+0x1>
 346:	24 1b       	sub	r18, r20
 348:	35 0b       	sbc	r19, r21
 34a:	e0 91 70 00 	lds	r30, 0x0070	; 0x800070 <__data_end>
 34e:	f0 91 71 00 	lds	r31, 0x0071	; 0x800071 <__data_end+0x1>
 352:	e2 17       	cp	r30, r18
 354:	f3 07       	cpc	r31, r19
 356:	a0 f4       	brcc	.+40     	; 0x380 <malloc+0x120>
 358:	2e 1b       	sub	r18, r30
 35a:	3f 0b       	sbc	r19, r31
 35c:	28 17       	cp	r18, r24
 35e:	39 07       	cpc	r19, r25
 360:	78 f0       	brcs	.+30     	; 0x380 <malloc+0x120>
 362:	ac 01       	movw	r20, r24
 364:	4e 5f       	subi	r20, 0xFE	; 254
 366:	5f 4f       	sbci	r21, 0xFF	; 255
 368:	24 17       	cp	r18, r20
 36a:	35 07       	cpc	r19, r21
 36c:	48 f0       	brcs	.+18     	; 0x380 <malloc+0x120>
 36e:	4e 0f       	add	r20, r30
 370:	5f 1f       	adc	r21, r31
 372:	50 93 71 00 	sts	0x0071, r21	; 0x800071 <__data_end+0x1>
 376:	40 93 70 00 	sts	0x0070, r20	; 0x800070 <__data_end>
 37a:	81 93       	st	Z+, r24
 37c:	91 93       	st	Z+, r25
 37e:	02 c0       	rjmp	.+4      	; 0x384 <malloc+0x124>
 380:	e0 e0       	ldi	r30, 0x00	; 0
 382:	f0 e0       	ldi	r31, 0x00	; 0
 384:	cf 01       	movw	r24, r30
 386:	df 91       	pop	r29
 388:	cf 91       	pop	r28
 38a:	1f 91       	pop	r17
 38c:	0f 91       	pop	r16
 38e:	08 95       	ret

00000390 <free>:
 390:	cf 93       	push	r28
 392:	df 93       	push	r29
 394:	00 97       	sbiw	r24, 0x00	; 0
 396:	09 f4       	brne	.+2      	; 0x39a <free+0xa>
 398:	81 c0       	rjmp	.+258    	; 0x49c <__stack+0x3d>
 39a:	fc 01       	movw	r30, r24
 39c:	32 97       	sbiw	r30, 0x02	; 2
 39e:	13 82       	std	Z+3, r1	; 0x03
 3a0:	12 82       	std	Z+2, r1	; 0x02
 3a2:	a0 91 72 00 	lds	r26, 0x0072	; 0x800072 <__flp>
 3a6:	b0 91 73 00 	lds	r27, 0x0073	; 0x800073 <__flp+0x1>
 3aa:	10 97       	sbiw	r26, 0x00	; 0
 3ac:	81 f4       	brne	.+32     	; 0x3ce <free+0x3e>
 3ae:	20 81       	ld	r18, Z
 3b0:	31 81       	ldd	r19, Z+1	; 0x01
 3b2:	82 0f       	add	r24, r18
 3b4:	93 1f       	adc	r25, r19
 3b6:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__data_end>
 3ba:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__data_end+0x1>
 3be:	28 17       	cp	r18, r24
 3c0:	39 07       	cpc	r19, r25
 3c2:	51 f5       	brne	.+84     	; 0x418 <__DATA_REGION_LENGTH__+0x18>
 3c4:	f0 93 71 00 	sts	0x0071, r31	; 0x800071 <__data_end+0x1>
 3c8:	e0 93 70 00 	sts	0x0070, r30	; 0x800070 <__data_end>
 3cc:	67 c0       	rjmp	.+206    	; 0x49c <__stack+0x3d>
 3ce:	ed 01       	movw	r28, r26
 3d0:	20 e0       	ldi	r18, 0x00	; 0
 3d2:	30 e0       	ldi	r19, 0x00	; 0
 3d4:	ce 17       	cp	r28, r30
 3d6:	df 07       	cpc	r29, r31
 3d8:	40 f4       	brcc	.+16     	; 0x3ea <free+0x5a>
 3da:	4a 81       	ldd	r20, Y+2	; 0x02
 3dc:	5b 81       	ldd	r21, Y+3	; 0x03
 3de:	9e 01       	movw	r18, r28
 3e0:	41 15       	cp	r20, r1
 3e2:	51 05       	cpc	r21, r1
 3e4:	f1 f0       	breq	.+60     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 3e6:	ea 01       	movw	r28, r20
 3e8:	f5 cf       	rjmp	.-22     	; 0x3d4 <free+0x44>
 3ea:	d3 83       	std	Z+3, r29	; 0x03
 3ec:	c2 83       	std	Z+2, r28	; 0x02
 3ee:	40 81       	ld	r20, Z
 3f0:	51 81       	ldd	r21, Z+1	; 0x01
 3f2:	84 0f       	add	r24, r20
 3f4:	95 1f       	adc	r25, r21
 3f6:	c8 17       	cp	r28, r24
 3f8:	d9 07       	cpc	r29, r25
 3fa:	59 f4       	brne	.+22     	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 3fc:	88 81       	ld	r24, Y
 3fe:	99 81       	ldd	r25, Y+1	; 0x01
 400:	84 0f       	add	r24, r20
 402:	95 1f       	adc	r25, r21
 404:	02 96       	adiw	r24, 0x02	; 2
 406:	91 83       	std	Z+1, r25	; 0x01
 408:	80 83       	st	Z, r24
 40a:	8a 81       	ldd	r24, Y+2	; 0x02
 40c:	9b 81       	ldd	r25, Y+3	; 0x03
 40e:	93 83       	std	Z+3, r25	; 0x03
 410:	82 83       	std	Z+2, r24	; 0x02
 412:	21 15       	cp	r18, r1
 414:	31 05       	cpc	r19, r1
 416:	29 f4       	brne	.+10     	; 0x422 <__DATA_REGION_LENGTH__+0x22>
 418:	f0 93 73 00 	sts	0x0073, r31	; 0x800073 <__flp+0x1>
 41c:	e0 93 72 00 	sts	0x0072, r30	; 0x800072 <__flp>
 420:	3d c0       	rjmp	.+122    	; 0x49c <__stack+0x3d>
 422:	e9 01       	movw	r28, r18
 424:	fb 83       	std	Y+3, r31	; 0x03
 426:	ea 83       	std	Y+2, r30	; 0x02
 428:	49 91       	ld	r20, Y+
 42a:	59 91       	ld	r21, Y+
 42c:	c4 0f       	add	r28, r20
 42e:	d5 1f       	adc	r29, r21
 430:	ec 17       	cp	r30, r28
 432:	fd 07       	cpc	r31, r29
 434:	61 f4       	brne	.+24     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 436:	80 81       	ld	r24, Z
 438:	91 81       	ldd	r25, Z+1	; 0x01
 43a:	84 0f       	add	r24, r20
 43c:	95 1f       	adc	r25, r21
 43e:	02 96       	adiw	r24, 0x02	; 2
 440:	e9 01       	movw	r28, r18
 442:	99 83       	std	Y+1, r25	; 0x01
 444:	88 83       	st	Y, r24
 446:	82 81       	ldd	r24, Z+2	; 0x02
 448:	93 81       	ldd	r25, Z+3	; 0x03
 44a:	9b 83       	std	Y+3, r25	; 0x03
 44c:	8a 83       	std	Y+2, r24	; 0x02
 44e:	e0 e0       	ldi	r30, 0x00	; 0
 450:	f0 e0       	ldi	r31, 0x00	; 0
 452:	12 96       	adiw	r26, 0x02	; 2
 454:	8d 91       	ld	r24, X+
 456:	9c 91       	ld	r25, X
 458:	13 97       	sbiw	r26, 0x03	; 3
 45a:	00 97       	sbiw	r24, 0x00	; 0
 45c:	19 f0       	breq	.+6      	; 0x464 <__stack+0x5>
 45e:	fd 01       	movw	r30, r26
 460:	dc 01       	movw	r26, r24
 462:	f7 cf       	rjmp	.-18     	; 0x452 <__DATA_REGION_LENGTH__+0x52>
 464:	8d 91       	ld	r24, X+
 466:	9c 91       	ld	r25, X
 468:	11 97       	sbiw	r26, 0x01	; 1
 46a:	9d 01       	movw	r18, r26
 46c:	2e 5f       	subi	r18, 0xFE	; 254
 46e:	3f 4f       	sbci	r19, 0xFF	; 255
 470:	82 0f       	add	r24, r18
 472:	93 1f       	adc	r25, r19
 474:	20 91 70 00 	lds	r18, 0x0070	; 0x800070 <__data_end>
 478:	30 91 71 00 	lds	r19, 0x0071	; 0x800071 <__data_end+0x1>
 47c:	28 17       	cp	r18, r24
 47e:	39 07       	cpc	r19, r25
 480:	69 f4       	brne	.+26     	; 0x49c <__stack+0x3d>
 482:	30 97       	sbiw	r30, 0x00	; 0
 484:	29 f4       	brne	.+10     	; 0x490 <__stack+0x31>
 486:	10 92 73 00 	sts	0x0073, r1	; 0x800073 <__flp+0x1>
 48a:	10 92 72 00 	sts	0x0072, r1	; 0x800072 <__flp>
 48e:	02 c0       	rjmp	.+4      	; 0x494 <__stack+0x35>
 490:	13 82       	std	Z+3, r1	; 0x03
 492:	12 82       	std	Z+2, r1	; 0x02
 494:	b0 93 71 00 	sts	0x0071, r27	; 0x800071 <__data_end+0x1>
 498:	a0 93 70 00 	sts	0x0070, r26	; 0x800070 <__data_end>
 49c:	df 91       	pop	r29
 49e:	cf 91       	pop	r28
 4a0:	08 95       	ret

000004a2 <_exit>:
 4a2:	f8 94       	cli

000004a4 <__stop_program>:
 4a4:	ff cf       	rjmp	.-2      	; 0x4a4 <__stop_program>
