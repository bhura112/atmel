
gpio_btn_led.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000002e  00800100  000001e2  00000256  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         000001e2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000284  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  000002b4  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000060  00000000  00000000  000002f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000d54  00000000  00000000  00000350  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000096a  00000000  00000000  000010a4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   0000031e  00000000  00000000  00001a0e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  000000a4  00000000  00000000  00001d2c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    00000509  00000000  00000000  00001dd0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000024a  00000000  00000000  000022d9  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000040  00000000  00000000  00002523  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	45 c0       	rjmp	.+138    	; 0x8c <__ctors_end>
   2:	00 00       	nop
   4:	58 c0       	rjmp	.+176    	; 0xb6 <__bad_interrupt>
   6:	00 00       	nop
   8:	56 c0       	rjmp	.+172    	; 0xb6 <__bad_interrupt>
   a:	00 00       	nop
   c:	54 c0       	rjmp	.+168    	; 0xb6 <__bad_interrupt>
   e:	00 00       	nop
  10:	52 c0       	rjmp	.+164    	; 0xb6 <__bad_interrupt>
  12:	00 00       	nop
  14:	50 c0       	rjmp	.+160    	; 0xb6 <__bad_interrupt>
  16:	00 00       	nop
  18:	4e c0       	rjmp	.+156    	; 0xb6 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	4c c0       	rjmp	.+152    	; 0xb6 <__bad_interrupt>
  1e:	00 00       	nop
  20:	4a c0       	rjmp	.+148    	; 0xb6 <__bad_interrupt>
  22:	00 00       	nop
  24:	48 c0       	rjmp	.+144    	; 0xb6 <__bad_interrupt>
  26:	00 00       	nop
  28:	46 c0       	rjmp	.+140    	; 0xb6 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	44 c0       	rjmp	.+136    	; 0xb6 <__bad_interrupt>
  2e:	00 00       	nop
  30:	42 c0       	rjmp	.+132    	; 0xb6 <__bad_interrupt>
  32:	00 00       	nop
  34:	40 c0       	rjmp	.+128    	; 0xb6 <__bad_interrupt>
  36:	00 00       	nop
  38:	3e c0       	rjmp	.+124    	; 0xb6 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	3c c0       	rjmp	.+120    	; 0xb6 <__bad_interrupt>
  3e:	00 00       	nop
  40:	3a c0       	rjmp	.+116    	; 0xb6 <__bad_interrupt>
  42:	00 00       	nop
  44:	38 c0       	rjmp	.+112    	; 0xb6 <__bad_interrupt>
  46:	00 00       	nop
  48:	36 c0       	rjmp	.+108    	; 0xb6 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	34 c0       	rjmp	.+104    	; 0xb6 <__bad_interrupt>
  4e:	00 00       	nop
  50:	32 c0       	rjmp	.+100    	; 0xb6 <__bad_interrupt>
  52:	00 00       	nop
  54:	30 c0       	rjmp	.+96     	; 0xb6 <__bad_interrupt>
  56:	00 00       	nop
  58:	2e c0       	rjmp	.+92     	; 0xb6 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	2c c0       	rjmp	.+88     	; 0xb6 <__bad_interrupt>
  5e:	00 00       	nop
  60:	2a c0       	rjmp	.+84     	; 0xb6 <__bad_interrupt>
  62:	00 00       	nop
  64:	28 c0       	rjmp	.+80     	; 0xb6 <__bad_interrupt>
  66:	00 00       	nop
  68:	26 c0       	rjmp	.+76     	; 0xb6 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	24 c0       	rjmp	.+72     	; 0xb6 <__bad_interrupt>
  6e:	00 00       	nop
  70:	22 c0       	rjmp	.+68     	; 0xb6 <__bad_interrupt>
  72:	00 00       	nop
  74:	20 c0       	rjmp	.+64     	; 0xb6 <__bad_interrupt>
  76:	00 00       	nop
  78:	1e c0       	rjmp	.+60     	; 0xb6 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	1c c0       	rjmp	.+56     	; 0xb6 <__bad_interrupt>
  7e:	00 00       	nop
  80:	1a c0       	rjmp	.+52     	; 0xb6 <__bad_interrupt>
  82:	00 00       	nop
  84:	18 c0       	rjmp	.+48     	; 0xb6 <__bad_interrupt>
  86:	00 00       	nop
  88:	16 c0       	rjmp	.+44     	; 0xb6 <__bad_interrupt>
	...

0000008c <__ctors_end>:
  8c:	11 24       	eor	r1, r1
  8e:	1f be       	out	0x3f, r1	; 63
  90:	cf ef       	ldi	r28, 0xFF	; 255
  92:	d0 e1       	ldi	r29, 0x10	; 16
  94:	de bf       	out	0x3e, r29	; 62
  96:	cd bf       	out	0x3d, r28	; 61

00000098 <__do_copy_data>:
  98:	11 e0       	ldi	r17, 0x01	; 1
  9a:	a0 e0       	ldi	r26, 0x00	; 0
  9c:	b1 e0       	ldi	r27, 0x01	; 1
  9e:	e2 ee       	ldi	r30, 0xE2	; 226
  a0:	f1 e0       	ldi	r31, 0x01	; 1
  a2:	00 e0       	ldi	r16, 0x00	; 0
  a4:	0b bf       	out	0x3b, r16	; 59
  a6:	02 c0       	rjmp	.+4      	; 0xac <__do_copy_data+0x14>
  a8:	07 90       	elpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	ae 32       	cpi	r26, 0x2E	; 46
  ae:	b1 07       	cpc	r27, r17
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x10>
  b2:	7c d0       	rcall	.+248    	; 0x1ac <main>
  b4:	94 c0       	rjmp	.+296    	; 0x1de <_exit>

000000b6 <__bad_interrupt>:
  b6:	a4 cf       	rjmp	.-184    	; 0x0 <__vectors>

000000b8 <gpio_setdir>:
{&DDRG,&PORTG,&PING},
#endif

};

void gpio_setdir(gpio_t *io,gpio_dir_t dir) {
  b8:	dc 01       	movw	r26, r24
  ba:	96 2f       	mov	r25, r22
	u8_t d_reg = *gpiomap[io->port][0];
  bc:	2c 91       	ld	r18, X
  be:	30 e0       	ldi	r19, 0x00	; 0
  c0:	f9 01       	movw	r30, r18
  c2:	ee 0f       	add	r30, r30
  c4:	ff 1f       	adc	r31, r31
  c6:	e2 0f       	add	r30, r18
  c8:	f3 1f       	adc	r31, r19
  ca:	ee 0f       	add	r30, r30
  cc:	ff 1f       	adc	r31, r31
  ce:	e0 50       	subi	r30, 0x00	; 0
  d0:	ff 4f       	sbci	r31, 0xFF	; 255
  d2:	01 90       	ld	r0, Z+
  d4:	f0 81       	ld	r31, Z
  d6:	e0 2d       	mov	r30, r0
  d8:	60 81       	ld	r22, Z
	d_reg &= ~(1 << io->pin);
  da:	11 96       	adiw	r26, 0x01	; 1
  dc:	8c 91       	ld	r24, X
  de:	21 e0       	ldi	r18, 0x01	; 1
  e0:	30 e0       	ldi	r19, 0x00	; 0
  e2:	08 2e       	mov	r0, r24
  e4:	02 c0       	rjmp	.+4      	; 0xea <gpio_setdir+0x32>
  e6:	22 0f       	add	r18, r18
  e8:	33 1f       	adc	r19, r19
  ea:	0a 94       	dec	r0
  ec:	e2 f7       	brpl	.-8      	; 0xe6 <gpio_setdir+0x2e>
  ee:	20 95       	com	r18
  f0:	26 23       	and	r18, r22
	d_reg |= (dir << io->pin);
  f2:	69 2f       	mov	r22, r25
  f4:	70 e0       	ldi	r23, 0x00	; 0
  f6:	02 c0       	rjmp	.+4      	; 0xfc <gpio_setdir+0x44>
  f8:	66 0f       	add	r22, r22
  fa:	77 1f       	adc	r23, r23
  fc:	8a 95       	dec	r24
  fe:	e2 f7       	brpl	.-8      	; 0xf8 <gpio_setdir+0x40>
 100:	62 2b       	or	r22, r18
	*gpiomap[io->port][0] = d_reg;
 102:	60 83       	st	Z, r22
 104:	08 95       	ret

00000106 <gpio_set>:
}

void gpio_set(gpio_t *io,gpio_state_t state) {
 106:	dc 01       	movw	r26, r24
 108:	96 2f       	mov	r25, r22
	
	u8_t s_reg = *gpiomap[io->port][1];
 10a:	2c 91       	ld	r18, X
 10c:	30 e0       	ldi	r19, 0x00	; 0
 10e:	f9 01       	movw	r30, r18
 110:	ee 0f       	add	r30, r30
 112:	ff 1f       	adc	r31, r31
 114:	e2 0f       	add	r30, r18
 116:	f3 1f       	adc	r31, r19
 118:	ee 0f       	add	r30, r30
 11a:	ff 1f       	adc	r31, r31
 11c:	e0 50       	subi	r30, 0x00	; 0
 11e:	ff 4f       	sbci	r31, 0xFF	; 255
 120:	02 80       	ldd	r0, Z+2	; 0x02
 122:	f3 81       	ldd	r31, Z+3	; 0x03
 124:	e0 2d       	mov	r30, r0
 126:	60 81       	ld	r22, Z
	s_reg &= ~(1 << io->pin);
 128:	11 96       	adiw	r26, 0x01	; 1
 12a:	8c 91       	ld	r24, X
 12c:	21 e0       	ldi	r18, 0x01	; 1
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	08 2e       	mov	r0, r24
 132:	02 c0       	rjmp	.+4      	; 0x138 <gpio_set+0x32>
 134:	22 0f       	add	r18, r18
 136:	33 1f       	adc	r19, r19
 138:	0a 94       	dec	r0
 13a:	e2 f7       	brpl	.-8      	; 0x134 <gpio_set+0x2e>
 13c:	20 95       	com	r18
 13e:	26 23       	and	r18, r22
	s_reg |= (state << io->pin);
 140:	69 2f       	mov	r22, r25
 142:	70 e0       	ldi	r23, 0x00	; 0
 144:	02 c0       	rjmp	.+4      	; 0x14a <gpio_set+0x44>
 146:	66 0f       	add	r22, r22
 148:	77 1f       	adc	r23, r23
 14a:	8a 95       	dec	r24
 14c:	e2 f7       	brpl	.-8      	; 0x146 <gpio_set+0x40>
 14e:	62 2b       	or	r22, r18
	*gpiomap[io->port][1] = s_reg;
 150:	60 83       	st	Z, r22
 152:	08 95       	ret

00000154 <gpio_get>:
}

gpio_state_t gpio_get(gpio_t *io) {
	
	u8_t r_reg = *gpiomap[io->port][2];
 154:	fc 01       	movw	r30, r24
 156:	20 81       	ld	r18, Z
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	f9 01       	movw	r30, r18
 15c:	ee 0f       	add	r30, r30
 15e:	ff 1f       	adc	r31, r31
 160:	e2 0f       	add	r30, r18
 162:	f3 1f       	adc	r31, r19
 164:	ee 0f       	add	r30, r30
 166:	ff 1f       	adc	r31, r31
 168:	e0 50       	subi	r30, 0x00	; 0
 16a:	ff 4f       	sbci	r31, 0xFF	; 255
 16c:	04 80       	ldd	r0, Z+4	; 0x04
 16e:	f5 81       	ldd	r31, Z+5	; 0x05
 170:	e0 2d       	mov	r30, r0
 172:	20 81       	ld	r18, Z
	if(r_reg & (1 << io->pin))
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	a9 01       	movw	r20, r18
 178:	fc 01       	movw	r30, r24
 17a:	01 80       	ldd	r0, Z+1	; 0x01
 17c:	02 c0       	rjmp	.+4      	; 0x182 <gpio_get+0x2e>
 17e:	55 95       	asr	r21
 180:	47 95       	ror	r20
 182:	0a 94       	dec	r0
 184:	e2 f7       	brpl	.-8      	; 0x17e <gpio_get+0x2a>
 186:	40 ff       	sbrs	r20, 0
 188:	02 c0       	rjmp	.+4      	; 0x18e <gpio_get+0x3a>
		return PIN_HIGH;
 18a:	81 e0       	ldi	r24, 0x01	; 1
 18c:	08 95       	ret
	else
		return PIN_LOW;
 18e:	80 e0       	ldi	r24, 0x00	; 0
}
 190:	08 95       	ret

00000192 <gpio_config>:

void gpio_config(gpio_t *io,gpio_dir_t dir,gpio_state_t state) {
 192:	1f 93       	push	r17
 194:	cf 93       	push	r28
 196:	df 93       	push	r29
 198:	ec 01       	movw	r28, r24
 19a:	14 2f       	mov	r17, r20
	gpio_setdir(io,dir);
 19c:	8d df       	rcall	.-230    	; 0xb8 <gpio_setdir>
	gpio_set(io,state);
 19e:	61 2f       	mov	r22, r17
 1a0:	ce 01       	movw	r24, r28
 1a2:	b1 df       	rcall	.-158    	; 0x106 <gpio_set>
}
 1a4:	df 91       	pop	r29
 1a6:	cf 91       	pop	r28
 1a8:	1f 91       	pop	r17
 1aa:	08 95       	ret

000001ac <main>:
gpio_t button = {PORT_A,PIN_5};
	
int main(void)
{

	gpio_config(&led,PIN_OUT,PIN_LOW);
 1ac:	40 e0       	ldi	r20, 0x00	; 0
 1ae:	61 e0       	ldi	r22, 0x01	; 1
 1b0:	8c e2       	ldi	r24, 0x2C	; 44
 1b2:	91 e0       	ldi	r25, 0x01	; 1
 1b4:	ee df       	rcall	.-36     	; 0x192 <gpio_config>
	gpio_config(&button,PIN_IN,PIN_LOW);
 1b6:	40 e0       	ldi	r20, 0x00	; 0
 1b8:	60 e0       	ldi	r22, 0x00	; 0
 1ba:	8a e2       	ldi	r24, 0x2A	; 42
 1bc:	91 e0       	ldi	r25, 0x01	; 1
 1be:	e9 df       	rcall	.-46     	; 0x192 <gpio_config>
	
    while (1) 
    {
		if(gpio_get(&button))
 1c0:	8a e2       	ldi	r24, 0x2A	; 42
 1c2:	91 e0       	ldi	r25, 0x01	; 1
 1c4:	c7 df       	rcall	.-114    	; 0x154 <gpio_get>
 1c6:	88 23       	and	r24, r24
 1c8:	29 f0       	breq	.+10     	; 0x1d4 <main+0x28>
		gpio_set(&led,PIN_HIGH);
 1ca:	61 e0       	ldi	r22, 0x01	; 1
 1cc:	8c e2       	ldi	r24, 0x2C	; 44
 1ce:	91 e0       	ldi	r25, 0x01	; 1
 1d0:	9a df       	rcall	.-204    	; 0x106 <gpio_set>
 1d2:	f6 cf       	rjmp	.-20     	; 0x1c0 <main+0x14>
		else
		gpio_set(&led,PIN_LOW);
 1d4:	60 e0       	ldi	r22, 0x00	; 0
 1d6:	8c e2       	ldi	r24, 0x2C	; 44
 1d8:	91 e0       	ldi	r25, 0x01	; 1
 1da:	95 df       	rcall	.-214    	; 0x106 <gpio_set>
 1dc:	f1 cf       	rjmp	.-30     	; 0x1c0 <main+0x14>

000001de <_exit>:
 1de:	f8 94       	cli

000001e0 <__stop_program>:
 1e0:	ff cf       	rjmp	.-2      	; 0x1e0 <__stop_program>
