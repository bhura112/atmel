
XC8Application2.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000bf7  2**0
                  ALLOC, LOAD, DATA
  1 .text         000000d0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  00800100  00800100  00000bf7  2**0
                  ALLOC
  3 .comment      0000005b  00000000  00000000  00000bf7  2**0
                  CONTENTS, READONLY
  4 .debug_aranges 000000e8  00000000  00000000  00000c52  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00002114  00000000  00000000  00000d3a  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 00000b16  00000000  00000000  00002e4e  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   000006ef  00000000  00000000  00003964  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000218  00000000  00000000  00004054  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    0000021d  00000000  00000000  0000426c  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    0000076c  00000000  00000000  00004489  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 000000a8  00000000  00000000  00004bf5  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .text         00000004  00000b0e  00000b0e  00000ba2  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 13 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00004ca0  2**2
                  CONTENTS, READONLY, DEBUGGING
 14 .text.GPIO_RegBitWrite 00000054  000008f0  000008f0  00000984  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 15 .text.GPIO_RegBitRead 0000003c  00000988  00000988  00000a1c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 16 .text.GPIO_PinConfig 00000022  00000acc  00000acc  00000b60  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 17 .text.GPIO_PinSet 00000008  00000afe  00000afe  00000b92  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 18 .text.GPIO_PinGet 00000008  00000b06  00000b06  00000b9a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 19 .data.gpiomap 0000001e  00800127  00000b33  00000bc7  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 20 .progmemx.data 00000012  000000d0  000000d0  00000164  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, PROGMEMX
 21 .text.main    00000068  000007b8  000007b8  0000084c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 22 .data.pb02    00000003  00800154  00000b60  00000bf4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 23 .text.RS232_StreamWriteChar 00000010  00000aee  00000aee  00000b82  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 24 .text.RS232_Initialize 00000068  00000820  00000820  000008b4  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 25 .data.RS232STREAM 0000000f  00800145  00000b51  00000be5  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 26 .text.SAB82532_LinConfig 00000072  000006da  000006da  0000076e  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 27 .text.SAB82532_Initialize 00000036  000009fc  000009fc  00000a90  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 28 .text.SAB82532_WritePins 0000007c  000005e6  000005e6  0000067a  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 29 .text.SAB82532_ReadPins 00000068  00000888  00000888  0000091c  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 30 .text.SAB82532_ReadReg 0000006c  0000074c  0000074c  000007e0  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 31 .data.sab82532Obj 00000021  00800106  00000b12  00000ba6  2**0
                  CONTENTS, ALLOC, LOAD, DATA
 32 .text.libgcc.div 00000044  00000944  00000944  000009d8  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 33 .text.avrlibc 0000002e  00000a9e  00000a9e  00000b32  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 34 .text.avrlibc 00000448  000000e2  000000e2  00000176  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 35 .text.avrlibc 00000036  00000a32  00000a32  00000ac6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 36 .text.avrlibc 00000078  00000662  00000662  000006f6  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 37 .text.avrlibc 000000bc  0000052a  0000052a  000005be  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 38 .text.libgcc.prologue 00000038  000009c4  000009c4  00000a58  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
 39 .text.libgcc.prologue 00000036  00000a68  00000a68  00000afc  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__ctors_end>
   4:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
   8:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
   c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  10:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  14:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  18:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  1c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  20:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  24:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  28:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  2c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  30:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  34:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  38:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  3c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  40:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  44:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  48:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  4c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  50:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  54:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  58:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  5c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  60:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  64:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  68:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>
  6c:	0c 94 87 05 	jmp	0xb0e	; 0xb0e <__bad_interrupt>

00000070 <.dinit>:
  70:	01 00       	.word	0x0001	; ????
  72:	01 06       	cpc	r0, r17
  74:	80 01       	movw	r16, r0
  76:	06 01       	movw	r0, r12
  78:	57 00       	.word	0x0057	; ????
  7a:	0b 12       	cpse	r0, r27

0000007c <__ctors_end>:
  7c:	11 24       	eor	r1, r1
  7e:	1f be       	out	0x3f, r1	; 63
  80:	cf ef       	ldi	r28, 0xFF	; 255
  82:	d4 e0       	ldi	r29, 0x04	; 4
  84:	de bf       	out	0x3e, r29	; 62
  86:	cd bf       	out	0x3d, r28	; 61

00000088 <__do_copy_data>:
  88:	e0 e7       	ldi	r30, 0x70	; 112
  8a:	f0 e0       	ldi	r31, 0x00	; 0
  8c:	40 e0       	ldi	r20, 0x00	; 0
  8e:	17 c0       	rjmp	.+46     	; 0xbe <__do_clear_bss+0x8>
  90:	b5 91       	lpm	r27, Z+
  92:	a5 91       	lpm	r26, Z+
  94:	35 91       	lpm	r19, Z+
  96:	25 91       	lpm	r18, Z+
  98:	05 91       	lpm	r16, Z+
  9a:	07 fd       	sbrc	r16, 7
  9c:	0c c0       	rjmp	.+24     	; 0xb6 <__do_clear_bss>
  9e:	95 91       	lpm	r25, Z+
  a0:	85 91       	lpm	r24, Z+
  a2:	ef 01       	movw	r28, r30
  a4:	f9 2f       	mov	r31, r25
  a6:	e8 2f       	mov	r30, r24
  a8:	05 90       	lpm	r0, Z+
  aa:	0d 92       	st	X+, r0
  ac:	a2 17       	cp	r26, r18
  ae:	b3 07       	cpc	r27, r19
  b0:	d9 f7       	brne	.-10     	; 0xa8 <__do_copy_data+0x20>
  b2:	fe 01       	movw	r30, r28
  b4:	04 c0       	rjmp	.+8      	; 0xbe <__do_clear_bss+0x8>

000000b6 <__do_clear_bss>:
  b6:	1d 92       	st	X+, r1
  b8:	a2 17       	cp	r26, r18
  ba:	b3 07       	cpc	r27, r19
  bc:	e1 f7       	brne	.-8      	; 0xb6 <__do_clear_bss>
  be:	ec 37       	cpi	r30, 0x7C	; 124
  c0:	f4 07       	cpc	r31, r20
  c2:	31 f7       	brne	.-52     	; 0x90 <__do_copy_data+0x8>
  c4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <main>
  c8:	0c 94 66 00 	jmp	0xcc	; 0xcc <_exit>

000000cc <_exit>:
  cc:	f8 94       	cli

000000ce <__stop_program>:
  ce:	ff cf       	rjmp	.-2      	; 0xce <__stop_program>

Disassembly of section .text:

00000b0e <__bad_interrupt>:
 b0e:	0c 94 00 00 	jmp	0	; 0x0 <__TEXT_REGION_ORIGIN__>

Disassembly of section .text.GPIO_RegBitWrite:

000008f0 <GPIO_RegBitWrite>:
};



uint8_t GPIO_RegBitWrite(gpio_obj_t *gpio,bool bitv,uint8_t reg)
{
 8f0:	dc 01       	movw	r26, r24
 8f2:	96 2f       	mov	r25, r22
	 uint8_t regv = *gpiomap[gpio->port][reg];
 8f4:	2c 91       	ld	r18, X
 8f6:	30 e0       	ldi	r19, 0x00	; 0
 8f8:	f9 01       	movw	r30, r18
 8fa:	ee 0f       	add	r30, r30
 8fc:	ff 1f       	adc	r31, r31
 8fe:	e2 0f       	add	r30, r18
 900:	f3 1f       	adc	r31, r19
 902:	e4 0f       	add	r30, r20
 904:	f1 1d       	adc	r31, r1
 906:	ee 0f       	add	r30, r30
 908:	ff 1f       	adc	r31, r31
 90a:	e9 5d       	subi	r30, 0xD9	; 217
 90c:	fe 4f       	sbci	r31, 0xFE	; 254
 90e:	01 90       	ld	r0, Z+
 910:	f0 81       	ld	r31, Z
 912:	e0 2d       	mov	r30, r0
 914:	60 81       	ld	r22, Z
	 regv &= ~(1 << gpio->pin);
 916:	11 96       	adiw	r26, 0x01	; 1
 918:	8c 91       	ld	r24, X
 91a:	21 e0       	ldi	r18, 0x01	; 1
 91c:	30 e0       	ldi	r19, 0x00	; 0
 91e:	08 2e       	mov	r0, r24
 920:	02 c0       	rjmp	.+4      	; 0x926 <GPIO_RegBitWrite+0x36>
 922:	22 0f       	add	r18, r18
 924:	33 1f       	adc	r19, r19
 926:	0a 94       	dec	r0
 928:	e2 f7       	brpl	.-8      	; 0x922 <GPIO_RegBitWrite+0x32>
 92a:	20 95       	com	r18
 92c:	26 23       	and	r18, r22
	 regv |= (bitv << gpio->pin);
 92e:	69 2f       	mov	r22, r25
 930:	70 e0       	ldi	r23, 0x00	; 0
 932:	02 c0       	rjmp	.+4      	; 0x938 <GPIO_RegBitWrite+0x48>
 934:	66 0f       	add	r22, r22
 936:	77 1f       	adc	r23, r23
 938:	8a 95       	dec	r24
 93a:	e2 f7       	brpl	.-8      	; 0x934 <GPIO_RegBitWrite+0x44>
 93c:	82 2f       	mov	r24, r18
 93e:	86 2b       	or	r24, r22
	  *gpiomap[gpio->port][reg] = regv;
 940:	80 83       	st	Z, r24
	 return regv;
}
 942:	08 95       	ret

Disassembly of section .text.GPIO_RegBitRead:

00000988 <GPIO_RegBitRead>:

bool GPIO_RegBitRead(gpio_obj_t *gpio,uint8_t reg)
{
	uint8_t regv = *gpiomap[gpio->port][reg];
 988:	fc 01       	movw	r30, r24
 98a:	20 81       	ld	r18, Z
 98c:	30 e0       	ldi	r19, 0x00	; 0
 98e:	f9 01       	movw	r30, r18
 990:	ee 0f       	add	r30, r30
 992:	ff 1f       	adc	r31, r31
 994:	e2 0f       	add	r30, r18
 996:	f3 1f       	adc	r31, r19
 998:	e6 0f       	add	r30, r22
 99a:	f1 1d       	adc	r31, r1
 99c:	ee 0f       	add	r30, r30
 99e:	ff 1f       	adc	r31, r31
 9a0:	e9 5d       	subi	r30, 0xD9	; 217
 9a2:	fe 4f       	sbci	r31, 0xFE	; 254
 9a4:	01 90       	ld	r0, Z+
 9a6:	f0 81       	ld	r31, Z
 9a8:	e0 2d       	mov	r30, r0
 9aa:	20 81       	ld	r18, Z
	
	return (bool)( regv & (1 << gpio->pin) ? 1:0);
 9ac:	30 e0       	ldi	r19, 0x00	; 0
 9ae:	a9 01       	movw	r20, r18
 9b0:	fc 01       	movw	r30, r24
 9b2:	01 80       	ldd	r0, Z+1	; 0x01
 9b4:	02 c0       	rjmp	.+4      	; 0x9ba <GPIO_RegBitRead+0x32>
 9b6:	55 95       	asr	r21
 9b8:	47 95       	ror	r20
 9ba:	0a 94       	dec	r0
 9bc:	e2 f7       	brpl	.-8      	; 0x9b6 <GPIO_RegBitRead+0x2e>
 9be:	ca 01       	movw	r24, r20
}
 9c0:	81 70       	andi	r24, 0x01	; 1
 9c2:	08 95       	ret

Disassembly of section .text.GPIO_PinConfig:

00000acc <GPIO_PinConfig>:


void GPIO_PinConfig(gpio_obj_t *gpio,bool dir,bool state)
{
 acc:	1f 93       	push	r17
 ace:	cf 93       	push	r28
 ad0:	df 93       	push	r29
 ad2:	ec 01       	movw	r28, r24
 ad4:	14 2f       	mov	r17, r20
	GPIO_RegBitWrite(gpio,dir,GPIO_REG_DDR);
 ad6:	40 e0       	ldi	r20, 0x00	; 0
 ad8:	0e 94 78 04 	call	0x8f0	; 0x8f0 <GPIO_RegBitWrite>
	GPIO_RegBitWrite(gpio,state,GPIO_REG_POR);
 adc:	41 e0       	ldi	r20, 0x01	; 1
 ade:	61 2f       	mov	r22, r17
 ae0:	ce 01       	movw	r24, r28
 ae2:	0e 94 78 04 	call	0x8f0	; 0x8f0 <GPIO_RegBitWrite>
}
 ae6:	df 91       	pop	r29
 ae8:	cf 91       	pop	r28
 aea:	1f 91       	pop	r17
 aec:	08 95       	ret

Disassembly of section .text.GPIO_PinSet:

00000afe <GPIO_PinSet>:

void GPIO_PinSet(gpio_obj_t *gpio, bool state)
{
    GPIO_RegBitWrite(gpio,state,GPIO_REG_POR);	
 afe:	41 e0       	ldi	r20, 0x01	; 1
 b00:	0e 94 78 04 	call	0x8f0	; 0x8f0 <GPIO_RegBitWrite>
 b04:	08 95       	ret

Disassembly of section .text.GPIO_PinGet:

00000b06 <GPIO_PinGet>:
}

bool GPIO_PinGet(gpio_obj_t *gpio)
{
	return GPIO_RegBitRead(gpio,GPIO_REG_PIN);
 b06:	62 e0       	ldi	r22, 0x02	; 2
 b08:	0e 94 c4 04 	call	0x988	; 0x988 <GPIO_RegBitRead>
 b0c:	08 95       	ret

Disassembly of section .text.main:

000007b8 <main>:
	GPIO_LVL_LOW
};

int main(void)
{
	RS232_Initialize(9600);
 7b8:	60 e8       	ldi	r22, 0x80	; 128
 7ba:	75 e2       	ldi	r23, 0x25	; 37
 7bc:	80 e0       	ldi	r24, 0x00	; 0
 7be:	90 e0       	ldi	r25, 0x00	; 0
 7c0:	0e 94 10 04 	call	0x820	; 0x820 <RS232_Initialize>
	
	GPIO_PinConfig(&pb02,GPIO_DIR_OUT,GPIO_LVL_LOW);
 7c4:	40 e0       	ldi	r20, 0x00	; 0
 7c6:	61 e0       	ldi	r22, 0x01	; 1
 7c8:	84 e5       	ldi	r24, 0x54	; 84
 7ca:	91 e0       	ldi	r25, 0x01	; 1
 7cc:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	
	SAB82532_Initialize(&sab82532Obj);
 7d0:	86 e0       	ldi	r24, 0x06	; 6
 7d2:	91 e0       	ldi	r25, 0x01	; 1
 7d4:	0e 94 fe 04 	call	0x9fc	; 0x9fc <SAB82532_Initialize>
	
	while(1)
	{
		printf("0x%x VAL = 0x%x \n",SAB_STAR,SAB82532_ReadReg(&sab82532Obj,SAB_STAR));
 7d8:	60 e2       	ldi	r22, 0x20	; 32
 7da:	86 e0       	ldi	r24, 0x06	; 6
 7dc:	91 e0       	ldi	r25, 0x01	; 1
 7de:	0e 94 a6 03 	call	0x74c	; 0x74c <SAB82532_ReadReg>
 7e2:	1f 92       	push	r1
 7e4:	8f 93       	push	r24
 7e6:	1f 92       	push	r1
 7e8:	80 e2       	ldi	r24, 0x20	; 32
 7ea:	8f 93       	push	r24
 7ec:	80 ed       	ldi	r24, 0xD0	; 208
 7ee:	90 e0       	ldi	r25, 0x00	; 0
 7f0:	a0 e0       	ldi	r26, 0x00	; 0
 7f2:	af 93       	push	r26
 7f4:	9f 93       	push	r25
 7f6:	8f 93       	push	r24
 7f8:	0e 94 4f 05 	call	0xa9e	; 0xa9e <printf>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7fc:	2f ef       	ldi	r18, 0xFF	; 255
 7fe:	8f ef       	ldi	r24, 0xFF	; 255
 800:	9c e2       	ldi	r25, 0x2C	; 44
 802:	21 50       	subi	r18, 0x01	; 1
 804:	80 40       	sbci	r24, 0x00	; 0
 806:	90 40       	sbci	r25, 0x00	; 0
 808:	e1 f7       	brne	.-8      	; 0x802 <main+0x4a>
 80a:	00 c0       	rjmp	.+0      	; 0x80c <main+0x54>
 80c:	00 00       	nop
 80e:	8d b7       	in	r24, 0x3d	; 61
 810:	9e b7       	in	r25, 0x3e	; 62
 812:	07 96       	adiw	r24, 0x07	; 7
 814:	0f b6       	in	r0, 0x3f	; 63
 816:	f8 94       	cli
 818:	9e bf       	out	0x3e, r25	; 62
 81a:	0f be       	out	0x3f, r0	; 63
 81c:	8d bf       	out	0x3d, r24	; 61
 81e:	dc cf       	rjmp	.-72     	; 0x7d8 <main+0x20>

Disassembly of section .text.RS232_StreamWriteChar:

00000aee <RS232_StreamWriteChar>:
	return(UDR0);				/* return the byte*/
}

int RS232_StreamWriteChar(char c, FILE * stream) {
	
	while (! (UCSR0A & (1<<UDRE0))); /*Wait for empty transmit buffer*/
 aee:	5d 9b       	sbis	0x0b, 5	; 11
 af0:	fe cf       	rjmp	.-4      	; 0xaee <RS232_StreamWriteChar>
	UDR0 = c ;
 af2:	8c b9       	out	0x0c, r24	; 12
	while (! (UCSR0A & (1<<TXC0))); /*Wait for empty transmit buffer*/
 af4:	5e 9b       	sbis	0x0b, 6	; 11
 af6:	fe cf       	rjmp	.-4      	; 0xaf4 <RS232_StreamWriteChar+0x6>
	
	return 0;
}
 af8:	80 e0       	ldi	r24, 0x00	; 0
 afa:	90 e0       	ldi	r25, 0x00	; 0
 afc:	08 95       	ret

Disassembly of section .text.RS232_Initialize:

00000820 <RS232_Initialize>:

FILE RS232STREAM = FDEV_SETUP_STREAM(RS232_StreamWriteChar, NULL, _FDEV_SETUP_WRITE);

void RS232_Initialize(long USART_BAUDRATE)
{
	UCSR0B |= (1 << RXEN0) | (1 << TXEN0);   /* Turn on the transmission and reception */
 820:	2a b1       	in	r18, 0x0a	; 10
 822:	28 61       	ori	r18, 0x18	; 24
 824:	2a b9       	out	0x0a, r18	; 10
	UCSR0C |= (1 << URSEL0) | (1 << UCSZ00) | (1 << UCSZ01); /* Use 8-bit character sizes */
 826:	20 b5       	in	r18, 0x20	; 32
 828:	26 68       	ori	r18, 0x86	; 134
 82a:	20 bd       	out	0x20, r18	; 32

	UBRR0L = BAUD_PRESCALE(USART_BAUDRATE); 					/* Load lower 8-bits of the baud rate value */
 82c:	dc 01       	movw	r26, r24
 82e:	cb 01       	movw	r24, r22
 830:	88 0f       	add	r24, r24
 832:	99 1f       	adc	r25, r25
 834:	aa 1f       	adc	r26, r26
 836:	bb 1f       	adc	r27, r27
 838:	88 0f       	add	r24, r24
 83a:	99 1f       	adc	r25, r25
 83c:	aa 1f       	adc	r26, r26
 83e:	bb 1f       	adc	r27, r27
 840:	9c 01       	movw	r18, r24
 842:	ad 01       	movw	r20, r26
 844:	22 0f       	add	r18, r18
 846:	33 1f       	adc	r19, r19
 848:	44 1f       	adc	r20, r20
 84a:	55 1f       	adc	r21, r21
 84c:	22 0f       	add	r18, r18
 84e:	33 1f       	adc	r19, r19
 850:	44 1f       	adc	r20, r20
 852:	55 1f       	adc	r21, r21
 854:	60 e0       	ldi	r22, 0x00	; 0
 856:	70 e0       	ldi	r23, 0x00	; 0
 858:	81 ee       	ldi	r24, 0xE1	; 225
 85a:	90 e0       	ldi	r25, 0x00	; 0
 85c:	0e 94 a2 04 	call	0x944	; 0x944 <__udivmodsi4>
 860:	8f ef       	ldi	r24, 0xFF	; 255
 862:	82 0f       	add	r24, r18
 864:	89 b9       	out	0x09, r24	; 9
	UBRR0H = (BAUD_PRESCALE(USART_BAUDRATE) >> 8);			/*Load upper 8-bits*/
 866:	da 01       	movw	r26, r20
 868:	c9 01       	movw	r24, r18
 86a:	01 97       	sbiw	r24, 0x01	; 1
 86c:	a1 09       	sbc	r26, r1
 86e:	b1 09       	sbc	r27, r1
 870:	89 2f       	mov	r24, r25
 872:	9a 2f       	mov	r25, r26
 874:	ab 2f       	mov	r26, r27
 876:	bb 27       	eor	r27, r27
 878:	80 bd       	out	0x20, r24	; 32
	
	stdout = &RS232STREAM;
 87a:	85 e4       	ldi	r24, 0x45	; 69
 87c:	91 e0       	ldi	r25, 0x01	; 1
 87e:	90 93 03 01 	sts	0x0103, r25	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 882:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 886:	08 95       	ret

Disassembly of section .text.SAB82532_LinConfig:

000006da <SAB82532_LinConfig>:
	}
  
};

void SAB82532_LinConfig(sab82532_obj_t *sab,bool dir,bool state)
{
 6da:	0f 93       	push	r16
 6dc:	1f 93       	push	r17
 6de:	cf 93       	push	r28
 6e0:	df 93       	push	r29
 6e2:	ec 01       	movw	r28, r24
 6e4:	16 2f       	mov	r17, r22
 6e6:	04 2f       	mov	r16, r20
	
	GPIO_PinConfig(&sab->line.a0,dir,state);
 6e8:	09 96       	adiw	r24, 0x09	; 9
 6ea:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a1,dir,state);
 6ee:	40 2f       	mov	r20, r16
 6f0:	61 2f       	mov	r22, r17
 6f2:	ce 01       	movw	r24, r28
 6f4:	0c 96       	adiw	r24, 0x0c	; 12
 6f6:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a2,dir,state);
 6fa:	40 2f       	mov	r20, r16
 6fc:	61 2f       	mov	r22, r17
 6fe:	ce 01       	movw	r24, r28
 700:	0f 96       	adiw	r24, 0x0f	; 15
 702:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a3,dir,state);
 706:	40 2f       	mov	r20, r16
 708:	61 2f       	mov	r22, r17
 70a:	ce 01       	movw	r24, r28
 70c:	42 96       	adiw	r24, 0x12	; 18
 70e:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a4,dir,state);
 712:	40 2f       	mov	r20, r16
 714:	61 2f       	mov	r22, r17
 716:	ce 01       	movw	r24, r28
 718:	45 96       	adiw	r24, 0x15	; 21
 71a:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a5,dir,state);
 71e:	40 2f       	mov	r20, r16
 720:	61 2f       	mov	r22, r17
 722:	ce 01       	movw	r24, r28
 724:	48 96       	adiw	r24, 0x18	; 24
 726:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a6,dir,state);
 72a:	40 2f       	mov	r20, r16
 72c:	61 2f       	mov	r22, r17
 72e:	ce 01       	movw	r24, r28
 730:	4b 96       	adiw	r24, 0x1b	; 27
 732:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->line.a7,dir,state);
 736:	40 2f       	mov	r20, r16
 738:	61 2f       	mov	r22, r17
 73a:	ce 01       	movw	r24, r28
 73c:	4e 96       	adiw	r24, 0x1e	; 30
 73e:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	
}
 742:	df 91       	pop	r29
 744:	cf 91       	pop	r28
 746:	1f 91       	pop	r17
 748:	0f 91       	pop	r16
 74a:	08 95       	ret

Disassembly of section .text.SAB82532_Initialize:

000009fc <SAB82532_Initialize>:
void SAB82532_Initialize( sab82532_obj_t *sab)
{
 9fc:	cf 93       	push	r28
 9fe:	df 93       	push	r29
 a00:	ec 01       	movw	r28, r24
	GPIO_PinConfig(&sab->rd_ds,GPIO_DIR_OUT,GPIO_LVL_HIGH);
 a02:	41 e0       	ldi	r20, 0x01	; 1
 a04:	61 e0       	ldi	r22, 0x01	; 1
 a06:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->wrr_rw,GPIO_DIR_OUT,GPIO_LVL_HIGH);
 a0a:	41 e0       	ldi	r20, 0x01	; 1
 a0c:	61 e0       	ldi	r22, 0x01	; 1
 a0e:	ce 01       	movw	r24, r28
 a10:	03 96       	adiw	r24, 0x03	; 3
 a12:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	GPIO_PinConfig(&sab->ale,GPIO_DIR_OUT,GPIO_LVL_HIGH);
 a16:	41 e0       	ldi	r20, 0x01	; 1
 a18:	61 e0       	ldi	r22, 0x01	; 1
 a1a:	ce 01       	movw	r24, r28
 a1c:	06 96       	adiw	r24, 0x06	; 6
 a1e:	0e 94 66 05 	call	0xacc	; 0xacc <GPIO_PinConfig>
	
    SAB82532_LinConfig(sab,GPIO_DIR_OUT,GPIO_LVL_LOW);
 a22:	40 e0       	ldi	r20, 0x00	; 0
 a24:	61 e0       	ldi	r22, 0x01	; 1
 a26:	ce 01       	movw	r24, r28
 a28:	0e 94 6d 03 	call	0x6da	; 0x6da <SAB82532_LinConfig>
}
 a2c:	df 91       	pop	r29
 a2e:	cf 91       	pop	r28
 a30:	08 95       	ret

Disassembly of section .text.SAB82532_WritePins:

000005e6 <SAB82532_WritePins>:

void SAB82532_WritePins(sab82532_obj_t *sab,uint8_t b)
{
 5e6:	0f 93       	push	r16
 5e8:	1f 93       	push	r17
 5ea:	cf 93       	push	r28
 5ec:	8c 01       	movw	r16, r24
 5ee:	c6 2f       	mov	r28, r22
	addr_data_reg_t regv = (addr_data_reg_t)b;
	
	GPIO_PinSet(&sab->line.a0 , regv.b.b0);
 5f0:	61 70       	andi	r22, 0x01	; 1
 5f2:	09 96       	adiw	r24, 0x09	; 9
 5f4:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a1 , regv.b.b1);
 5f8:	c1 fb       	bst	r28, 1
 5fa:	66 27       	eor	r22, r22
 5fc:	60 f9       	bld	r22, 0
 5fe:	c8 01       	movw	r24, r16
 600:	0c 96       	adiw	r24, 0x0c	; 12
 602:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a2 , regv.b.b2);
 606:	c2 fb       	bst	r28, 2
 608:	66 27       	eor	r22, r22
 60a:	60 f9       	bld	r22, 0
 60c:	c8 01       	movw	r24, r16
 60e:	0f 96       	adiw	r24, 0x0f	; 15
 610:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a3 , regv.b.b3);
 614:	c3 fb       	bst	r28, 3
 616:	66 27       	eor	r22, r22
 618:	60 f9       	bld	r22, 0
 61a:	c8 01       	movw	r24, r16
 61c:	42 96       	adiw	r24, 0x12	; 18
 61e:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a4 , regv.b.b4);
 622:	c4 fb       	bst	r28, 4
 624:	66 27       	eor	r22, r22
 626:	60 f9       	bld	r22, 0
 628:	c8 01       	movw	r24, r16
 62a:	45 96       	adiw	r24, 0x15	; 21
 62c:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a5 , regv.b.b5);
 630:	c5 fb       	bst	r28, 5
 632:	66 27       	eor	r22, r22
 634:	60 f9       	bld	r22, 0
 636:	c8 01       	movw	r24, r16
 638:	48 96       	adiw	r24, 0x18	; 24
 63a:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a6 , regv.b.b6);
 63e:	c6 fb       	bst	r28, 6
 640:	66 27       	eor	r22, r22
 642:	60 f9       	bld	r22, 0
 644:	c8 01       	movw	r24, r16
 646:	4b 96       	adiw	r24, 0x1b	; 27
 648:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	GPIO_PinSet(&sab->line.a7 , regv.b.b7);
 64c:	c7 fb       	bst	r28, 7
 64e:	66 27       	eor	r22, r22
 650:	60 f9       	bld	r22, 0
 652:	c8 01       	movw	r24, r16
 654:	4e 96       	adiw	r24, 0x1e	; 30
 656:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	
}
 65a:	cf 91       	pop	r28
 65c:	1f 91       	pop	r17
 65e:	0f 91       	pop	r16
 660:	08 95       	ret

Disassembly of section .text.SAB82532_ReadPins:

00000888 <SAB82532_ReadPins>:

uint8_t SAB82532_ReadPins(sab82532_obj_t *sab)
{
 888:	0f 93       	push	r16
 88a:	1f 93       	push	r17
 88c:	cf 93       	push	r28
	addr_data_reg_t regv = {0};
 88e:	c0 e0       	ldi	r28, 0x00	; 0
	
	 regv.b.b0 = GPIO_PinGet(&sab->line.a0);
 890:	8c 01       	movw	r16, r24
 892:	07 5f       	subi	r16, 0xF7	; 247
 894:	1f 4f       	sbci	r17, 0xFF	; 255
 896:	c8 01       	movw	r24, r16
 898:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 89c:	80 fb       	bst	r24, 0
 89e:	c0 f9       	bld	r28, 0
	 regv.b.b1 = GPIO_PinGet(&sab->line.a0);
 8a0:	c8 01       	movw	r24, r16
 8a2:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8a6:	80 fb       	bst	r24, 0
 8a8:	c1 f9       	bld	r28, 1
	 regv.b.b2 = GPIO_PinGet(&sab->line.a0);
 8aa:	c8 01       	movw	r24, r16
 8ac:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8b0:	80 fb       	bst	r24, 0
 8b2:	c2 f9       	bld	r28, 2
	 regv.b.b3 = GPIO_PinGet(&sab->line.a0);
 8b4:	c8 01       	movw	r24, r16
 8b6:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8ba:	80 fb       	bst	r24, 0
 8bc:	c3 f9       	bld	r28, 3
	 regv.b.b4 = GPIO_PinGet(&sab->line.a0);
 8be:	c8 01       	movw	r24, r16
 8c0:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8c4:	80 fb       	bst	r24, 0
 8c6:	c4 f9       	bld	r28, 4
     regv.b.b5 = GPIO_PinGet(&sab->line.a0);
 8c8:	c8 01       	movw	r24, r16
 8ca:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8ce:	80 fb       	bst	r24, 0
 8d0:	c5 f9       	bld	r28, 5
     regv.b.b6 = GPIO_PinGet(&sab->line.a0);
 8d2:	c8 01       	movw	r24, r16
 8d4:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8d8:	80 fb       	bst	r24, 0
 8da:	c6 f9       	bld	r28, 6
	 regv.b.b7 = GPIO_PinGet(&sab->line.a0);
 8dc:	c8 01       	movw	r24, r16
 8de:	0e 94 83 05 	call	0xb06	; 0xb06 <GPIO_PinGet>
 8e2:	80 fb       	bst	r24, 0
 8e4:	c7 f9       	bld	r28, 7
	
	return regv.byte;
}
 8e6:	8c 2f       	mov	r24, r28
 8e8:	cf 91       	pop	r28
 8ea:	1f 91       	pop	r17
 8ec:	0f 91       	pop	r16
 8ee:	08 95       	ret

Disassembly of section .text.SAB82532_ReadReg:

0000074c <SAB82532_ReadReg>:

uint8_t SAB82532_ReadReg(sab82532_obj_t *sab,uint8_t reg)
{
 74c:	ff 92       	push	r15
 74e:	0f 93       	push	r16
 750:	1f 93       	push	r17
 752:	cf 93       	push	r28
 754:	df 93       	push	r29
 756:	ec 01       	movw	r28, r24
 758:	16 2f       	mov	r17, r22
	uint8_t regv = 0;
	
	GPIO_PinSet(&sab->rd_ds,GPIO_LVL_LOW);
 75a:	60 e0       	ldi	r22, 0x00	; 0
 75c:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	
	SAB82532_LinConfig(sab,GPIO_DIR_OUT,GPIO_LVL_LOW);
 760:	40 e0       	ldi	r20, 0x00	; 0
 762:	61 e0       	ldi	r22, 0x01	; 1
 764:	ce 01       	movw	r24, r28
 766:	0e 94 6d 03 	call	0x6da	; 0x6da <SAB82532_LinConfig>
	
	SAB82532_WritePins(sab,reg);
 76a:	61 2f       	mov	r22, r17
 76c:	ce 01       	movw	r24, r28
 76e:	0e 94 f3 02 	call	0x5e6	; 0x5e6 <SAB82532_WritePins>
	
	GPIO_PinSet(&sab->ale,GPIO_LVL_LOW);
 772:	8e 01       	movw	r16, r28
 774:	0a 5f       	subi	r16, 0xFA	; 250
 776:	1f 4f       	sbci	r17, 0xFF	; 255
 778:	60 e0       	ldi	r22, 0x00	; 0
 77a:	c8 01       	movw	r24, r16
 77c:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	
	asm("nop");
 780:	00 00       	nop
	asm("nop");
 782:	00 00       	nop
	SAB82532_LinConfig(sab,GPIO_DIR_IN,GPIO_LVL_LOW);
 784:	40 e0       	ldi	r20, 0x00	; 0
 786:	60 e0       	ldi	r22, 0x00	; 0
 788:	ce 01       	movw	r24, r28
 78a:	0e 94 6d 03 	call	0x6da	; 0x6da <SAB82532_LinConfig>
	asm("nop");
 78e:	00 00       	nop
	asm("nop");
 790:	00 00       	nop
	
	regv = SAB82532_ReadPins(sab);
 792:	ce 01       	movw	r24, r28
 794:	0e 94 44 04 	call	0x888	; 0x888 <SAB82532_ReadPins>
 798:	f8 2e       	mov	r15, r24
	
	GPIO_PinSet(&sab->ale,GPIO_LVL_HIGH);
 79a:	61 e0       	ldi	r22, 0x01	; 1
 79c:	c8 01       	movw	r24, r16
 79e:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	
	GPIO_PinSet(&sab->rd_ds,GPIO_LVL_HIGH);
 7a2:	61 e0       	ldi	r22, 0x01	; 1
 7a4:	ce 01       	movw	r24, r28
 7a6:	0e 94 7f 05 	call	0xafe	; 0xafe <GPIO_PinSet>
	
	return regv;
 7aa:	8f 2d       	mov	r24, r15
 7ac:	df 91       	pop	r29
 7ae:	cf 91       	pop	r28
 7b0:	1f 91       	pop	r17
 7b2:	0f 91       	pop	r16
 7b4:	ff 90       	pop	r15
 7b6:	08 95       	ret

Disassembly of section .text.libgcc.div:

00000944 <__udivmodsi4>:
 944:	a1 e2       	ldi	r26, 0x21	; 33
 946:	1a 2e       	mov	r1, r26
 948:	aa 1b       	sub	r26, r26
 94a:	bb 1b       	sub	r27, r27
 94c:	fd 01       	movw	r30, r26
 94e:	0d c0       	rjmp	.+26     	; 0x96a <__udivmodsi4_ep>

00000950 <__udivmodsi4_loop>:
 950:	aa 1f       	adc	r26, r26
 952:	bb 1f       	adc	r27, r27
 954:	ee 1f       	adc	r30, r30
 956:	ff 1f       	adc	r31, r31
 958:	a2 17       	cp	r26, r18
 95a:	b3 07       	cpc	r27, r19
 95c:	e4 07       	cpc	r30, r20
 95e:	f5 07       	cpc	r31, r21
 960:	20 f0       	brcs	.+8      	; 0x96a <__udivmodsi4_ep>
 962:	a2 1b       	sub	r26, r18
 964:	b3 0b       	sbc	r27, r19
 966:	e4 0b       	sbc	r30, r20
 968:	f5 0b       	sbc	r31, r21

0000096a <__udivmodsi4_ep>:
 96a:	66 1f       	adc	r22, r22
 96c:	77 1f       	adc	r23, r23
 96e:	88 1f       	adc	r24, r24
 970:	99 1f       	adc	r25, r25
 972:	1a 94       	dec	r1
 974:	69 f7       	brne	.-38     	; 0x950 <__udivmodsi4_loop>
 976:	60 95       	com	r22
 978:	70 95       	com	r23
 97a:	80 95       	com	r24
 97c:	90 95       	com	r25
 97e:	9b 01       	movw	r18, r22
 980:	ac 01       	movw	r20, r24
 982:	bd 01       	movw	r22, r26
 984:	cf 01       	movw	r24, r30
 986:	08 95       	ret

Disassembly of section .text.avrlibc:

00000a9e <printf>:
 a9e:	a0 e0       	ldi	r26, 0x00	; 0
 aa0:	b0 e0       	ldi	r27, 0x00	; 0
 aa2:	e5 e5       	ldi	r30, 0x55	; 85
 aa4:	f5 e0       	ldi	r31, 0x05	; 5
 aa6:	0c 94 f2 04 	jmp	0x9e4	; 0x9e4 <__prologue_saves__+0x20>
 aaa:	9e 01       	movw	r18, r28
 aac:	2b 5f       	subi	r18, 0xFB	; 251
 aae:	3f 4f       	sbci	r19, 0xFF	; 255
 ab0:	f9 01       	movw	r30, r18
 ab2:	41 91       	ld	r20, Z+
 ab4:	51 91       	ld	r21, Z+
 ab6:	61 91       	ld	r22, Z+
 ab8:	9f 01       	movw	r18, r30
 aba:	80 91 02 01 	lds	r24, 0x0102	; 0x800102 <__DATA_REGION_ORIGIN__+0x2>
 abe:	90 91 03 01 	lds	r25, 0x0103	; 0x800103 <__DATA_REGION_ORIGIN__+0x3>
 ac2:	0e 94 71 00 	call	0xe2	; 0xe2 <vfprintf>
 ac6:	e2 e0       	ldi	r30, 0x02	; 2
 ac8:	0c 94 44 05 	jmp	0xa88	; 0xa88 <__epilogue_restores__+0x20>

Disassembly of section .text.avrlibc:

000000e2 <vfprintf>:
  e2:	2f 92       	push	r2
  e4:	3f 92       	push	r3
  e6:	4f 92       	push	r4
  e8:	6f 92       	push	r6
  ea:	7f 92       	push	r7
  ec:	8f 92       	push	r8
  ee:	9f 92       	push	r9
  f0:	af 92       	push	r10
  f2:	bf 92       	push	r11
  f4:	cf 92       	push	r12
  f6:	df 92       	push	r13
  f8:	ef 92       	push	r14
  fa:	ff 92       	push	r15
  fc:	0f 93       	push	r16
  fe:	1f 93       	push	r17
 100:	cf 93       	push	r28
 102:	df 93       	push	r29
 104:	cd b7       	in	r28, 0x3d	; 61
 106:	de b7       	in	r29, 0x3e	; 62
 108:	62 97       	sbiw	r28, 0x12	; 18
 10a:	0f b6       	in	r0, 0x3f	; 63
 10c:	f8 94       	cli
 10e:	de bf       	out	0x3e, r29	; 62
 110:	0f be       	out	0x3f, r0	; 63
 112:	cd bf       	out	0x3d, r28	; 61
 114:	6c 01       	movw	r12, r24
 116:	3a 01       	movw	r6, r20
 118:	86 2e       	mov	r8, r22
 11a:	79 01       	movw	r14, r18
 11c:	fc 01       	movw	r30, r24
 11e:	10 86       	std	Z+8, r1	; 0x08
 120:	17 82       	std	Z+7, r1	; 0x07
 122:	84 81       	ldd	r24, Z+4	; 0x04
 124:	81 ff       	sbrs	r24, 1
 126:	e7 c1       	rjmp	.+974    	; 0x4f6 <__DATA_REGION_LENGTH__+0xf6>
 128:	9e 01       	movw	r18, r28
 12a:	2f 5f       	subi	r18, 0xFF	; 255
 12c:	3f 4f       	sbci	r19, 0xFF	; 255
 12e:	3d 87       	std	Y+13, r19	; 0x0d
 130:	2c 87       	std	Y+12, r18	; 0x0c
 132:	c9 01       	movw	r24, r18
 134:	a0 e8       	ldi	r26, 0x80	; 128
 136:	88 8b       	std	Y+16, r24	; 0x10
 138:	99 8b       	std	Y+17, r25	; 0x11
 13a:	aa 8b       	std	Y+18, r26	; 0x12
 13c:	9f e3       	ldi	r25, 0x3F	; 63
 13e:	99 2e       	mov	r9, r25
 140:	f3 01       	movw	r30, r6
 142:	84 91       	lpm	r24, Z
 144:	87 fc       	sbrc	r8, 7
 146:	80 81       	ld	r24, Z
 148:	88 23       	and	r24, r24
 14a:	09 f4       	brne	.+2      	; 0x14e <vfprintf+0x6c>
 14c:	d0 c1       	rjmp	.+928    	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 14e:	48 2d       	mov	r20, r8
 150:	93 01       	movw	r18, r6
 152:	2f 5f       	subi	r18, 0xFF	; 255
 154:	3f 4f       	sbci	r19, 0xFF	; 255
 156:	4f 4f       	sbci	r20, 0xFF	; 255
 158:	85 32       	cpi	r24, 0x25	; 37
 15a:	19 f0       	breq	.+6      	; 0x162 <vfprintf+0x80>
 15c:	39 01       	movw	r6, r18
 15e:	84 2e       	mov	r8, r20
 160:	0a c0       	rjmp	.+20     	; 0x176 <vfprintf+0x94>
 162:	f9 01       	movw	r30, r18
 164:	84 91       	lpm	r24, Z
 166:	47 fd       	sbrc	r20, 7
 168:	80 81       	ld	r24, Z
 16a:	92 e0       	ldi	r25, 0x02	; 2
 16c:	69 0e       	add	r6, r25
 16e:	71 1c       	adc	r7, r1
 170:	81 1c       	adc	r8, r1
 172:	85 32       	cpi	r24, 0x25	; 37
 174:	29 f4       	brne	.+10     	; 0x180 <vfprintf+0x9e>
 176:	b6 01       	movw	r22, r12
 178:	90 e0       	ldi	r25, 0x00	; 0
 17a:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 17e:	e0 cf       	rjmp	.-64     	; 0x140 <vfprintf+0x5e>
 180:	b1 2c       	mov	r11, r1
 182:	00 e0       	ldi	r16, 0x00	; 0
 184:	10 e0       	ldi	r17, 0x00	; 0
 186:	10 32       	cpi	r17, 0x20	; 32
 188:	a0 f4       	brcc	.+40     	; 0x1b2 <vfprintf+0xd0>
 18a:	8b 32       	cpi	r24, 0x2B	; 43
 18c:	69 f0       	breq	.+26     	; 0x1a8 <vfprintf+0xc6>
 18e:	30 f4       	brcc	.+12     	; 0x19c <vfprintf+0xba>
 190:	80 32       	cpi	r24, 0x20	; 32
 192:	59 f0       	breq	.+22     	; 0x1aa <vfprintf+0xc8>
 194:	83 32       	cpi	r24, 0x23	; 35
 196:	69 f4       	brne	.+26     	; 0x1b2 <vfprintf+0xd0>
 198:	10 61       	ori	r17, 0x10	; 16
 19a:	2c c0       	rjmp	.+88     	; 0x1f4 <vfprintf+0x112>
 19c:	8d 32       	cpi	r24, 0x2D	; 45
 19e:	39 f0       	breq	.+14     	; 0x1ae <vfprintf+0xcc>
 1a0:	80 33       	cpi	r24, 0x30	; 48
 1a2:	39 f4       	brne	.+14     	; 0x1b2 <vfprintf+0xd0>
 1a4:	11 60       	ori	r17, 0x01	; 1
 1a6:	26 c0       	rjmp	.+76     	; 0x1f4 <vfprintf+0x112>
 1a8:	12 60       	ori	r17, 0x02	; 2
 1aa:	14 60       	ori	r17, 0x04	; 4
 1ac:	23 c0       	rjmp	.+70     	; 0x1f4 <vfprintf+0x112>
 1ae:	18 60       	ori	r17, 0x08	; 8
 1b0:	21 c0       	rjmp	.+66     	; 0x1f4 <vfprintf+0x112>
 1b2:	17 fd       	sbrc	r17, 7
 1b4:	29 c0       	rjmp	.+82     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 1b6:	90 ed       	ldi	r25, 0xD0	; 208
 1b8:	98 0f       	add	r25, r24
 1ba:	9a 30       	cpi	r25, 0x0A	; 10
 1bc:	78 f4       	brcc	.+30     	; 0x1dc <vfprintf+0xfa>
 1be:	16 ff       	sbrs	r17, 6
 1c0:	06 c0       	rjmp	.+12     	; 0x1ce <vfprintf+0xec>
 1c2:	aa e0       	ldi	r26, 0x0A	; 10
 1c4:	ba 9e       	mul	r11, r26
 1c6:	90 0d       	add	r25, r0
 1c8:	11 24       	eor	r1, r1
 1ca:	b9 2e       	mov	r11, r25
 1cc:	13 c0       	rjmp	.+38     	; 0x1f4 <vfprintf+0x112>
 1ce:	ea e0       	ldi	r30, 0x0A	; 10
 1d0:	0e 9f       	mul	r16, r30
 1d2:	90 0d       	add	r25, r0
 1d4:	11 24       	eor	r1, r1
 1d6:	09 2f       	mov	r16, r25
 1d8:	10 62       	ori	r17, 0x20	; 32
 1da:	0c c0       	rjmp	.+24     	; 0x1f4 <vfprintf+0x112>
 1dc:	8e 32       	cpi	r24, 0x2E	; 46
 1de:	21 f4       	brne	.+8      	; 0x1e8 <vfprintf+0x106>
 1e0:	16 fd       	sbrc	r17, 6
 1e2:	85 c1       	rjmp	.+778    	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 1e4:	10 64       	ori	r17, 0x40	; 64
 1e6:	06 c0       	rjmp	.+12     	; 0x1f4 <vfprintf+0x112>
 1e8:	8c 36       	cpi	r24, 0x6C	; 108
 1ea:	11 f4       	brne	.+4      	; 0x1f0 <vfprintf+0x10e>
 1ec:	10 68       	ori	r17, 0x80	; 128
 1ee:	02 c0       	rjmp	.+4      	; 0x1f4 <vfprintf+0x112>
 1f0:	88 36       	cpi	r24, 0x68	; 104
 1f2:	51 f4       	brne	.+20     	; 0x208 <__EEPROM_REGION_LENGTH__+0x8>
 1f4:	f3 01       	movw	r30, r6
 1f6:	84 91       	lpm	r24, Z
 1f8:	87 fc       	sbrc	r8, 7
 1fa:	80 81       	ld	r24, Z
 1fc:	ff ef       	ldi	r31, 0xFF	; 255
 1fe:	6f 1a       	sub	r6, r31
 200:	7f 0a       	sbc	r7, r31
 202:	8f 0a       	sbc	r8, r31
 204:	81 11       	cpse	r24, r1
 206:	bf cf       	rjmp	.-130    	; 0x186 <vfprintf+0xa4>
 208:	98 2f       	mov	r25, r24
 20a:	9f 7d       	andi	r25, 0xDF	; 223
 20c:	95 54       	subi	r25, 0x45	; 69
 20e:	93 30       	cpi	r25, 0x03	; 3
 210:	28 f4       	brcc	.+10     	; 0x21c <__EEPROM_REGION_LENGTH__+0x1c>
 212:	24 e0       	ldi	r18, 0x04	; 4
 214:	e2 0e       	add	r14, r18
 216:	f1 1c       	adc	r15, r1
 218:	99 82       	std	Y+1, r9	; 0x01
 21a:	0f c0       	rjmp	.+30     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
 21c:	83 36       	cpi	r24, 0x63	; 99
 21e:	31 f0       	breq	.+12     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 220:	83 37       	cpi	r24, 0x73	; 115
 222:	91 f0       	breq	.+36     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
 224:	83 35       	cpi	r24, 0x53	; 83
 226:	09 f0       	breq	.+2      	; 0x22a <__EEPROM_REGION_LENGTH__+0x2a>
 228:	63 c0       	rjmp	.+198    	; 0x2f0 <__EEPROM_REGION_LENGTH__+0xf0>
 22a:	27 c0       	rjmp	.+78     	; 0x27a <__EEPROM_REGION_LENGTH__+0x7a>
 22c:	f7 01       	movw	r30, r14
 22e:	80 81       	ld	r24, Z
 230:	89 83       	std	Y+1, r24	; 0x01
 232:	97 01       	movw	r18, r14
 234:	2e 5f       	subi	r18, 0xFE	; 254
 236:	3f 4f       	sbci	r19, 0xFF	; 255
 238:	79 01       	movw	r14, r18
 23a:	28 88       	ldd	r2, Y+16	; 0x10
 23c:	39 88       	ldd	r3, Y+17	; 0x11
 23e:	4a 88       	ldd	r4, Y+18	; 0x12
 240:	aa 24       	eor	r10, r10
 242:	a3 94       	inc	r10
 244:	b1 2c       	mov	r11, r1
 246:	17 c0       	rjmp	.+46     	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
 248:	a7 01       	movw	r20, r14
 24a:	4d 5f       	subi	r20, 0xFD	; 253
 24c:	5f 4f       	sbci	r21, 0xFF	; 255
 24e:	5f 87       	std	Y+15, r21	; 0x0f
 250:	4e 87       	std	Y+14, r20	; 0x0e
 252:	f7 01       	movw	r30, r14
 254:	20 80       	ld	r2, Z
 256:	31 80       	ldd	r3, Z+1	; 0x01
 258:	42 80       	ldd	r4, Z+2	; 0x02
 25a:	16 ff       	sbrs	r17, 6
 25c:	03 c0       	rjmp	.+6      	; 0x264 <__EEPROM_REGION_LENGTH__+0x64>
 25e:	4b 2d       	mov	r20, r11
 260:	50 e0       	ldi	r21, 0x00	; 0
 262:	02 c0       	rjmp	.+4      	; 0x268 <__EEPROM_REGION_LENGTH__+0x68>
 264:	4f ef       	ldi	r20, 0xFF	; 255
 266:	5f ef       	ldi	r21, 0xFF	; 255
 268:	84 2d       	mov	r24, r4
 26a:	b1 01       	movw	r22, r2
 26c:	0e 94 19 05 	call	0xa32	; 0xa32 <strnlen>
 270:	5c 01       	movw	r10, r24
 272:	ee 84       	ldd	r14, Y+14	; 0x0e
 274:	ff 84       	ldd	r15, Y+15	; 0x0f
 276:	1f 77       	andi	r17, 0x7F	; 127
 278:	18 c0       	rjmp	.+48     	; 0x2aa <__EEPROM_REGION_LENGTH__+0xaa>
 27a:	97 01       	movw	r18, r14
 27c:	2d 5f       	subi	r18, 0xFD	; 253
 27e:	3f 4f       	sbci	r19, 0xFF	; 255
 280:	3f 87       	std	Y+15, r19	; 0x0f
 282:	2e 87       	std	Y+14, r18	; 0x0e
 284:	f7 01       	movw	r30, r14
 286:	20 80       	ld	r2, Z
 288:	31 80       	ldd	r3, Z+1	; 0x01
 28a:	42 80       	ldd	r4, Z+2	; 0x02
 28c:	16 ff       	sbrs	r17, 6
 28e:	03 c0       	rjmp	.+6      	; 0x296 <__EEPROM_REGION_LENGTH__+0x96>
 290:	4b 2d       	mov	r20, r11
 292:	50 e0       	ldi	r21, 0x00	; 0
 294:	02 c0       	rjmp	.+4      	; 0x29a <__EEPROM_REGION_LENGTH__+0x9a>
 296:	4f ef       	ldi	r20, 0xFF	; 255
 298:	5f ef       	ldi	r21, 0xFF	; 255
 29a:	84 2d       	mov	r24, r4
 29c:	b1 01       	movw	r22, r2
 29e:	0e 94 19 05 	call	0xa32	; 0xa32 <strnlen>
 2a2:	5c 01       	movw	r10, r24
 2a4:	10 68       	ori	r17, 0x80	; 128
 2a6:	ee 84       	ldd	r14, Y+14	; 0x0e
 2a8:	ff 84       	ldd	r15, Y+15	; 0x0f
 2aa:	13 fd       	sbrc	r17, 3
 2ac:	1d c0       	rjmp	.+58     	; 0x2e8 <__EEPROM_REGION_LENGTH__+0xe8>
 2ae:	80 2f       	mov	r24, r16
 2b0:	90 e0       	ldi	r25, 0x00	; 0
 2b2:	a8 16       	cp	r10, r24
 2b4:	b9 06       	cpc	r11, r25
 2b6:	c0 f4       	brcc	.+48     	; 0x2e8 <__EEPROM_REGION_LENGTH__+0xe8>
 2b8:	b6 01       	movw	r22, r12
 2ba:	80 e2       	ldi	r24, 0x20	; 32
 2bc:	90 e0       	ldi	r25, 0x00	; 0
 2be:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 2c2:	01 50       	subi	r16, 0x01	; 1
 2c4:	f4 cf       	rjmp	.-24     	; 0x2ae <__EEPROM_REGION_LENGTH__+0xae>
 2c6:	f1 01       	movw	r30, r2
 2c8:	84 91       	lpm	r24, Z
 2ca:	47 fc       	sbrc	r4, 7
 2cc:	80 81       	ld	r24, Z
 2ce:	ff ef       	ldi	r31, 0xFF	; 255
 2d0:	2f 1a       	sub	r2, r31
 2d2:	3f 0a       	sbc	r3, r31
 2d4:	4f 0a       	sbc	r4, r31
 2d6:	b6 01       	movw	r22, r12
 2d8:	90 e0       	ldi	r25, 0x00	; 0
 2da:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 2de:	01 11       	cpse	r16, r1
 2e0:	01 50       	subi	r16, 0x01	; 1
 2e2:	21 e0       	ldi	r18, 0x01	; 1
 2e4:	a2 1a       	sub	r10, r18
 2e6:	b1 08       	sbc	r11, r1
 2e8:	a1 14       	cp	r10, r1
 2ea:	b1 04       	cpc	r11, r1
 2ec:	61 f7       	brne	.-40     	; 0x2c6 <__EEPROM_REGION_LENGTH__+0xc6>
 2ee:	f5 c0       	rjmp	.+490    	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 2f0:	84 36       	cpi	r24, 0x64	; 100
 2f2:	11 f0       	breq	.+4      	; 0x2f8 <__EEPROM_REGION_LENGTH__+0xf8>
 2f4:	89 36       	cpi	r24, 0x69	; 105
 2f6:	71 f5       	brne	.+92     	; 0x354 <__EEPROM_REGION_LENGTH__+0x154>
 2f8:	f7 01       	movw	r30, r14
 2fa:	17 ff       	sbrs	r17, 7
 2fc:	08 c0       	rjmp	.+16     	; 0x30e <__EEPROM_REGION_LENGTH__+0x10e>
 2fe:	60 81       	ld	r22, Z
 300:	71 81       	ldd	r23, Z+1	; 0x01
 302:	82 81       	ldd	r24, Z+2	; 0x02
 304:	93 81       	ldd	r25, Z+3	; 0x03
 306:	97 01       	movw	r18, r14
 308:	2c 5f       	subi	r18, 0xFC	; 252
 30a:	3f 4f       	sbci	r19, 0xFF	; 255
 30c:	09 c0       	rjmp	.+18     	; 0x320 <__EEPROM_REGION_LENGTH__+0x120>
 30e:	60 81       	ld	r22, Z
 310:	71 81       	ldd	r23, Z+1	; 0x01
 312:	07 2e       	mov	r0, r23
 314:	00 0c       	add	r0, r0
 316:	88 0b       	sbc	r24, r24
 318:	99 0b       	sbc	r25, r25
 31a:	97 01       	movw	r18, r14
 31c:	2e 5f       	subi	r18, 0xFE	; 254
 31e:	3f 4f       	sbci	r19, 0xFF	; 255
 320:	79 01       	movw	r14, r18
 322:	1f 76       	andi	r17, 0x6F	; 111
 324:	31 2e       	mov	r3, r17
 326:	97 ff       	sbrs	r25, 7
 328:	0a c0       	rjmp	.+20     	; 0x33e <__EEPROM_REGION_LENGTH__+0x13e>
 32a:	90 95       	com	r25
 32c:	80 95       	com	r24
 32e:	70 95       	com	r23
 330:	61 95       	neg	r22
 332:	7f 4f       	sbci	r23, 0xFF	; 255
 334:	8f 4f       	sbci	r24, 0xFF	; 255
 336:	9f 4f       	sbci	r25, 0xFF	; 255
 338:	31 2f       	mov	r19, r17
 33a:	30 68       	ori	r19, 0x80	; 128
 33c:	33 2e       	mov	r3, r19
 33e:	2a e0       	ldi	r18, 0x0A	; 10
 340:	30 e0       	ldi	r19, 0x00	; 0
 342:	ae 01       	movw	r20, r28
 344:	4f 5f       	subi	r20, 0xFF	; 255
 346:	5f 4f       	sbci	r21, 0xFF	; 255
 348:	0e 94 95 02 	call	0x52a	; 0x52a <__ultoa_invert>
 34c:	48 2e       	mov	r4, r24
 34e:	4c 85       	ldd	r20, Y+12	; 0x0c
 350:	44 1a       	sub	r4, r20
 352:	4a c0       	rjmp	.+148    	; 0x3e8 <__EEPROM_REGION_LENGTH__+0x1e8>
 354:	85 37       	cpi	r24, 0x75	; 117
 356:	29 f4       	brne	.+10     	; 0x362 <__EEPROM_REGION_LENGTH__+0x162>
 358:	1f 7e       	andi	r17, 0xEF	; 239
 35a:	a1 2e       	mov	r10, r17
 35c:	2a e0       	ldi	r18, 0x0A	; 10
 35e:	30 e0       	ldi	r19, 0x00	; 0
 360:	25 c0       	rjmp	.+74     	; 0x3ac <__EEPROM_REGION_LENGTH__+0x1ac>
 362:	51 2f       	mov	r21, r17
 364:	59 7f       	andi	r21, 0xF9	; 249
 366:	a5 2e       	mov	r10, r21
 368:	8f 36       	cpi	r24, 0x6F	; 111
 36a:	c1 f0       	breq	.+48     	; 0x39c <__EEPROM_REGION_LENGTH__+0x19c>
 36c:	18 f4       	brcc	.+6      	; 0x374 <__EEPROM_REGION_LENGTH__+0x174>
 36e:	88 35       	cpi	r24, 0x58	; 88
 370:	79 f0       	breq	.+30     	; 0x390 <__EEPROM_REGION_LENGTH__+0x190>
 372:	bd c0       	rjmp	.+378    	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 374:	80 37       	cpi	r24, 0x70	; 112
 376:	19 f0       	breq	.+6      	; 0x37e <__EEPROM_REGION_LENGTH__+0x17e>
 378:	88 37       	cpi	r24, 0x78	; 120
 37a:	21 f0       	breq	.+8      	; 0x384 <__EEPROM_REGION_LENGTH__+0x184>
 37c:	b8 c0       	rjmp	.+368    	; 0x4ee <__DATA_REGION_LENGTH__+0xee>
 37e:	85 2f       	mov	r24, r21
 380:	80 61       	ori	r24, 0x10	; 16
 382:	a8 2e       	mov	r10, r24
 384:	a4 fe       	sbrs	r10, 4
 386:	0d c0       	rjmp	.+26     	; 0x3a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 388:	9a 2d       	mov	r25, r10
 38a:	94 60       	ori	r25, 0x04	; 4
 38c:	a9 2e       	mov	r10, r25
 38e:	09 c0       	rjmp	.+18     	; 0x3a2 <__EEPROM_REGION_LENGTH__+0x1a2>
 390:	14 ff       	sbrs	r17, 4
 392:	0a c0       	rjmp	.+20     	; 0x3a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 394:	a5 2f       	mov	r26, r21
 396:	a6 60       	ori	r26, 0x06	; 6
 398:	aa 2e       	mov	r10, r26
 39a:	06 c0       	rjmp	.+12     	; 0x3a8 <__EEPROM_REGION_LENGTH__+0x1a8>
 39c:	28 e0       	ldi	r18, 0x08	; 8
 39e:	30 e0       	ldi	r19, 0x00	; 0
 3a0:	05 c0       	rjmp	.+10     	; 0x3ac <__EEPROM_REGION_LENGTH__+0x1ac>
 3a2:	20 e1       	ldi	r18, 0x10	; 16
 3a4:	30 e0       	ldi	r19, 0x00	; 0
 3a6:	02 c0       	rjmp	.+4      	; 0x3ac <__EEPROM_REGION_LENGTH__+0x1ac>
 3a8:	20 e1       	ldi	r18, 0x10	; 16
 3aa:	32 e0       	ldi	r19, 0x02	; 2
 3ac:	f7 01       	movw	r30, r14
 3ae:	a7 fe       	sbrs	r10, 7
 3b0:	08 c0       	rjmp	.+16     	; 0x3c2 <__EEPROM_REGION_LENGTH__+0x1c2>
 3b2:	60 81       	ld	r22, Z
 3b4:	71 81       	ldd	r23, Z+1	; 0x01
 3b6:	82 81       	ldd	r24, Z+2	; 0x02
 3b8:	93 81       	ldd	r25, Z+3	; 0x03
 3ba:	a7 01       	movw	r20, r14
 3bc:	4c 5f       	subi	r20, 0xFC	; 252
 3be:	5f 4f       	sbci	r21, 0xFF	; 255
 3c0:	07 c0       	rjmp	.+14     	; 0x3d0 <__EEPROM_REGION_LENGTH__+0x1d0>
 3c2:	60 81       	ld	r22, Z
 3c4:	71 81       	ldd	r23, Z+1	; 0x01
 3c6:	80 e0       	ldi	r24, 0x00	; 0
 3c8:	90 e0       	ldi	r25, 0x00	; 0
 3ca:	a7 01       	movw	r20, r14
 3cc:	4e 5f       	subi	r20, 0xFE	; 254
 3ce:	5f 4f       	sbci	r21, 0xFF	; 255
 3d0:	7a 01       	movw	r14, r20
 3d2:	ae 01       	movw	r20, r28
 3d4:	4f 5f       	subi	r20, 0xFF	; 255
 3d6:	5f 4f       	sbci	r21, 0xFF	; 255
 3d8:	0e 94 95 02 	call	0x52a	; 0x52a <__ultoa_invert>
 3dc:	48 2e       	mov	r4, r24
 3de:	5c 85       	ldd	r21, Y+12	; 0x0c
 3e0:	45 1a       	sub	r4, r21
 3e2:	8a 2d       	mov	r24, r10
 3e4:	8f 77       	andi	r24, 0x7F	; 127
 3e6:	38 2e       	mov	r3, r24
 3e8:	36 fe       	sbrs	r3, 6
 3ea:	0d c0       	rjmp	.+26     	; 0x406 <__DATA_REGION_LENGTH__+0x6>
 3ec:	93 2d       	mov	r25, r3
 3ee:	9e 7f       	andi	r25, 0xFE	; 254
 3f0:	a9 2e       	mov	r10, r25
 3f2:	4b 14       	cp	r4, r11
 3f4:	58 f4       	brcc	.+22     	; 0x40c <__DATA_REGION_LENGTH__+0xc>
 3f6:	34 fe       	sbrs	r3, 4
 3f8:	0b c0       	rjmp	.+22     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3fa:	32 fc       	sbrc	r3, 2
 3fc:	09 c0       	rjmp	.+18     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 3fe:	a3 2d       	mov	r26, r3
 400:	ae 7e       	andi	r26, 0xEE	; 238
 402:	aa 2e       	mov	r10, r26
 404:	05 c0       	rjmp	.+10     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 406:	14 2d       	mov	r17, r4
 408:	a3 2c       	mov	r10, r3
 40a:	03 c0       	rjmp	.+6      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 40c:	14 2d       	mov	r17, r4
 40e:	01 c0       	rjmp	.+2      	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 410:	1b 2d       	mov	r17, r11
 412:	a4 fe       	sbrs	r10, 4
 414:	0e c0       	rjmp	.+28     	; 0x432 <__DATA_REGION_LENGTH__+0x32>
 416:	fe 01       	movw	r30, r28
 418:	e4 0d       	add	r30, r4
 41a:	f1 1d       	adc	r31, r1
 41c:	80 81       	ld	r24, Z
 41e:	80 33       	cpi	r24, 0x30	; 48
 420:	21 f4       	brne	.+8      	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 422:	ea 2d       	mov	r30, r10
 424:	e9 7e       	andi	r30, 0xE9	; 233
 426:	ae 2e       	mov	r10, r30
 428:	08 c0       	rjmp	.+16     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 42a:	a2 fe       	sbrs	r10, 2
 42c:	05 c0       	rjmp	.+10     	; 0x438 <__DATA_REGION_LENGTH__+0x38>
 42e:	1e 5f       	subi	r17, 0xFE	; 254
 430:	04 c0       	rjmp	.+8      	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 432:	8a 2d       	mov	r24, r10
 434:	86 78       	andi	r24, 0x86	; 134
 436:	09 f0       	breq	.+2      	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 438:	1f 5f       	subi	r17, 0xFF	; 255
 43a:	a3 fc       	sbrc	r10, 3
 43c:	11 c0       	rjmp	.+34     	; 0x460 <__DATA_REGION_LENGTH__+0x60>
 43e:	a0 fe       	sbrs	r10, 0
 440:	06 c0       	rjmp	.+12     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 442:	10 17       	cp	r17, r16
 444:	88 f4       	brcc	.+34     	; 0x468 <__DATA_REGION_LENGTH__+0x68>
 446:	04 0d       	add	r16, r4
 448:	b0 2e       	mov	r11, r16
 44a:	b1 1a       	sub	r11, r17
 44c:	0e c0       	rjmp	.+28     	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
 44e:	10 17       	cp	r17, r16
 450:	60 f4       	brcc	.+24     	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
 452:	b6 01       	movw	r22, r12
 454:	80 e2       	ldi	r24, 0x20	; 32
 456:	90 e0       	ldi	r25, 0x00	; 0
 458:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 45c:	1f 5f       	subi	r17, 0xFF	; 255
 45e:	f7 cf       	rjmp	.-18     	; 0x44e <__DATA_REGION_LENGTH__+0x4e>
 460:	10 17       	cp	r17, r16
 462:	18 f4       	brcc	.+6      	; 0x46a <__DATA_REGION_LENGTH__+0x6a>
 464:	01 1b       	sub	r16, r17
 466:	02 c0       	rjmp	.+4      	; 0x46c <__DATA_REGION_LENGTH__+0x6c>
 468:	b4 2c       	mov	r11, r4
 46a:	00 e0       	ldi	r16, 0x00	; 0
 46c:	a4 fe       	sbrs	r10, 4
 46e:	10 c0       	rjmp	.+32     	; 0x490 <__DATA_REGION_LENGTH__+0x90>
 470:	b6 01       	movw	r22, r12
 472:	80 e3       	ldi	r24, 0x30	; 48
 474:	90 e0       	ldi	r25, 0x00	; 0
 476:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 47a:	a2 fe       	sbrs	r10, 2
 47c:	17 c0       	rjmp	.+46     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
 47e:	a1 fc       	sbrc	r10, 1
 480:	03 c0       	rjmp	.+6      	; 0x488 <__DATA_REGION_LENGTH__+0x88>
 482:	88 e7       	ldi	r24, 0x78	; 120
 484:	90 e0       	ldi	r25, 0x00	; 0
 486:	02 c0       	rjmp	.+4      	; 0x48c <__DATA_REGION_LENGTH__+0x8c>
 488:	88 e5       	ldi	r24, 0x58	; 88
 48a:	90 e0       	ldi	r25, 0x00	; 0
 48c:	b6 01       	movw	r22, r12
 48e:	0c c0       	rjmp	.+24     	; 0x4a8 <__DATA_REGION_LENGTH__+0xa8>
 490:	8a 2d       	mov	r24, r10
 492:	86 78       	andi	r24, 0x86	; 134
 494:	59 f0       	breq	.+22     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
 496:	a1 fe       	sbrs	r10, 1
 498:	02 c0       	rjmp	.+4      	; 0x49e <__DATA_REGION_LENGTH__+0x9e>
 49a:	8b e2       	ldi	r24, 0x2B	; 43
 49c:	01 c0       	rjmp	.+2      	; 0x4a0 <__DATA_REGION_LENGTH__+0xa0>
 49e:	80 e2       	ldi	r24, 0x20	; 32
 4a0:	a7 fc       	sbrc	r10, 7
 4a2:	8d e2       	ldi	r24, 0x2D	; 45
 4a4:	b6 01       	movw	r22, r12
 4a6:	90 e0       	ldi	r25, 0x00	; 0
 4a8:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 4ac:	4b 14       	cp	r4, r11
 4ae:	38 f4       	brcc	.+14     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 4b0:	b6 01       	movw	r22, r12
 4b2:	80 e3       	ldi	r24, 0x30	; 48
 4b4:	90 e0       	ldi	r25, 0x00	; 0
 4b6:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 4ba:	ba 94       	dec	r11
 4bc:	f7 cf       	rjmp	.-18     	; 0x4ac <__DATA_REGION_LENGTH__+0xac>
 4be:	4a 94       	dec	r4
 4c0:	e1 e0       	ldi	r30, 0x01	; 1
 4c2:	f0 e0       	ldi	r31, 0x00	; 0
 4c4:	ec 0f       	add	r30, r28
 4c6:	fd 1f       	adc	r31, r29
 4c8:	e4 0d       	add	r30, r4
 4ca:	f1 1d       	adc	r31, r1
 4cc:	80 81       	ld	r24, Z
 4ce:	b6 01       	movw	r22, r12
 4d0:	90 e0       	ldi	r25, 0x00	; 0
 4d2:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 4d6:	41 10       	cpse	r4, r1
 4d8:	f2 cf       	rjmp	.-28     	; 0x4be <__DATA_REGION_LENGTH__+0xbe>
 4da:	00 23       	and	r16, r16
 4dc:	09 f4       	brne	.+2      	; 0x4e0 <__DATA_REGION_LENGTH__+0xe0>
 4de:	30 ce       	rjmp	.-928    	; 0x140 <vfprintf+0x5e>
 4e0:	b6 01       	movw	r22, r12
 4e2:	80 e2       	ldi	r24, 0x20	; 32
 4e4:	90 e0       	ldi	r25, 0x00	; 0
 4e6:	0e 94 31 03 	call	0x662	; 0x662 <fputc>
 4ea:	01 50       	subi	r16, 0x01	; 1
 4ec:	f6 cf       	rjmp	.-20     	; 0x4da <__DATA_REGION_LENGTH__+0xda>
 4ee:	f6 01       	movw	r30, r12
 4f0:	87 81       	ldd	r24, Z+7	; 0x07
 4f2:	90 85       	ldd	r25, Z+8	; 0x08
 4f4:	02 c0       	rjmp	.+4      	; 0x4fa <__DATA_REGION_LENGTH__+0xfa>
 4f6:	8f ef       	ldi	r24, 0xFF	; 255
 4f8:	9f ef       	ldi	r25, 0xFF	; 255
 4fa:	62 96       	adiw	r28, 0x12	; 18
 4fc:	0f b6       	in	r0, 0x3f	; 63
 4fe:	f8 94       	cli
 500:	de bf       	out	0x3e, r29	; 62
 502:	0f be       	out	0x3f, r0	; 63
 504:	cd bf       	out	0x3d, r28	; 61
 506:	df 91       	pop	r29
 508:	cf 91       	pop	r28
 50a:	1f 91       	pop	r17
 50c:	0f 91       	pop	r16
 50e:	ff 90       	pop	r15
 510:	ef 90       	pop	r14
 512:	df 90       	pop	r13
 514:	cf 90       	pop	r12
 516:	bf 90       	pop	r11
 518:	af 90       	pop	r10
 51a:	9f 90       	pop	r9
 51c:	8f 90       	pop	r8
 51e:	7f 90       	pop	r7
 520:	6f 90       	pop	r6
 522:	4f 90       	pop	r4
 524:	3f 90       	pop	r3
 526:	2f 90       	pop	r2
 528:	08 95       	ret

Disassembly of section .text.avrlibc:

00000a32 <strnlen>:
 a32:	cf 92       	push	r12
 a34:	df 92       	push	r13
 a36:	ef 92       	push	r14
 a38:	6b 01       	movw	r12, r22
 a3a:	e8 2e       	mov	r14, r24
 a3c:	a8 2f       	mov	r26, r24
 a3e:	cb 01       	movw	r24, r22
 a40:	41 15       	cp	r20, r1
 a42:	51 05       	cpc	r21, r1
 a44:	31 f4       	brne	.+12     	; 0xa52 <strnlen+0x20>
 a46:	8c 19       	sub	r24, r12
 a48:	9d 09       	sbc	r25, r13
 a4a:	ef 90       	pop	r14
 a4c:	df 90       	pop	r13
 a4e:	cf 90       	pop	r12
 a50:	08 95       	ret
 a52:	fc 01       	movw	r30, r24
 a54:	24 91       	lpm	r18, Z
 a56:	a7 fd       	sbrc	r26, 7
 a58:	20 81       	ld	r18, Z
 a5a:	22 23       	and	r18, r18
 a5c:	a1 f3       	breq	.-24     	; 0xa46 <strnlen+0x14>
 a5e:	01 96       	adiw	r24, 0x01	; 1
 a60:	a1 1d       	adc	r26, r1
 a62:	41 50       	subi	r20, 0x01	; 1
 a64:	51 09       	sbc	r21, r1
 a66:	ec cf       	rjmp	.-40     	; 0xa40 <strnlen+0xe>

Disassembly of section .text.avrlibc:

00000662 <fputc>:
 662:	0f 93       	push	r16
 664:	1f 93       	push	r17
 666:	cf 93       	push	r28
 668:	df 93       	push	r29
 66a:	fb 01       	movw	r30, r22
 66c:	24 81       	ldd	r18, Z+4	; 0x04
 66e:	21 fd       	sbrc	r18, 1
 670:	03 c0       	rjmp	.+6      	; 0x678 <fputc+0x16>
 672:	8f ef       	ldi	r24, 0xFF	; 255
 674:	9f ef       	ldi	r25, 0xFF	; 255
 676:	2c c0       	rjmp	.+88     	; 0x6d0 <fputc+0x6e>
 678:	22 ff       	sbrs	r18, 2
 67a:	16 c0       	rjmp	.+44     	; 0x6a8 <fputc+0x46>
 67c:	47 81       	ldd	r20, Z+7	; 0x07
 67e:	50 85       	ldd	r21, Z+8	; 0x08
 680:	25 81       	ldd	r18, Z+5	; 0x05
 682:	36 81       	ldd	r19, Z+6	; 0x06
 684:	42 17       	cp	r20, r18
 686:	53 07       	cpc	r21, r19
 688:	44 f4       	brge	.+16     	; 0x69a <fputc+0x38>
 68a:	a0 81       	ld	r26, Z
 68c:	b1 81       	ldd	r27, Z+1	; 0x01
 68e:	9d 01       	movw	r18, r26
 690:	2f 5f       	subi	r18, 0xFF	; 255
 692:	3f 4f       	sbci	r19, 0xFF	; 255
 694:	31 83       	std	Z+1, r19	; 0x01
 696:	20 83       	st	Z, r18
 698:	8c 93       	st	X, r24
 69a:	27 81       	ldd	r18, Z+7	; 0x07
 69c:	30 85       	ldd	r19, Z+8	; 0x08
 69e:	2f 5f       	subi	r18, 0xFF	; 255
 6a0:	3f 4f       	sbci	r19, 0xFF	; 255
 6a2:	30 87       	std	Z+8, r19	; 0x08
 6a4:	27 83       	std	Z+7, r18	; 0x07
 6a6:	14 c0       	rjmp	.+40     	; 0x6d0 <fputc+0x6e>
 6a8:	8b 01       	movw	r16, r22
 6aa:	ec 01       	movw	r28, r24
 6ac:	fb 01       	movw	r30, r22
 6ae:	01 84       	ldd	r0, Z+9	; 0x09
 6b0:	f2 85       	ldd	r31, Z+10	; 0x0a
 6b2:	e0 2d       	mov	r30, r0
 6b4:	09 95       	icall
 6b6:	89 2b       	or	r24, r25
 6b8:	e1 f6       	brne	.-72     	; 0x672 <fputc+0x10>
 6ba:	d8 01       	movw	r26, r16
 6bc:	17 96       	adiw	r26, 0x07	; 7
 6be:	8d 91       	ld	r24, X+
 6c0:	9c 91       	ld	r25, X
 6c2:	18 97       	sbiw	r26, 0x08	; 8
 6c4:	01 96       	adiw	r24, 0x01	; 1
 6c6:	18 96       	adiw	r26, 0x08	; 8
 6c8:	9c 93       	st	X, r25
 6ca:	8e 93       	st	-X, r24
 6cc:	17 97       	sbiw	r26, 0x07	; 7
 6ce:	ce 01       	movw	r24, r28
 6d0:	df 91       	pop	r29
 6d2:	cf 91       	pop	r28
 6d4:	1f 91       	pop	r17
 6d6:	0f 91       	pop	r16
 6d8:	08 95       	ret

Disassembly of section .text.avrlibc:

0000052a <__ultoa_invert>:
 52a:	fa 01       	movw	r30, r20
 52c:	aa 27       	eor	r26, r26
 52e:	28 30       	cpi	r18, 0x08	; 8
 530:	51 f1       	breq	.+84     	; 0x586 <__ultoa_invert+0x5c>
 532:	20 31       	cpi	r18, 0x10	; 16
 534:	81 f1       	breq	.+96     	; 0x596 <__ultoa_invert+0x6c>
 536:	e8 94       	clt
 538:	6f 93       	push	r22
 53a:	6e 7f       	andi	r22, 0xFE	; 254
 53c:	6e 5f       	subi	r22, 0xFE	; 254
 53e:	7f 4f       	sbci	r23, 0xFF	; 255
 540:	8f 4f       	sbci	r24, 0xFF	; 255
 542:	9f 4f       	sbci	r25, 0xFF	; 255
 544:	af 4f       	sbci	r26, 0xFF	; 255
 546:	b1 e0       	ldi	r27, 0x01	; 1
 548:	3e d0       	rcall	.+124    	; 0x5c6 <__ultoa_invert+0x9c>
 54a:	b4 e0       	ldi	r27, 0x04	; 4
 54c:	3c d0       	rcall	.+120    	; 0x5c6 <__ultoa_invert+0x9c>
 54e:	67 0f       	add	r22, r23
 550:	78 1f       	adc	r23, r24
 552:	89 1f       	adc	r24, r25
 554:	9a 1f       	adc	r25, r26
 556:	a1 1d       	adc	r26, r1
 558:	68 0f       	add	r22, r24
 55a:	79 1f       	adc	r23, r25
 55c:	8a 1f       	adc	r24, r26
 55e:	91 1d       	adc	r25, r1
 560:	a1 1d       	adc	r26, r1
 562:	6a 0f       	add	r22, r26
 564:	71 1d       	adc	r23, r1
 566:	81 1d       	adc	r24, r1
 568:	91 1d       	adc	r25, r1
 56a:	a1 1d       	adc	r26, r1
 56c:	20 d0       	rcall	.+64     	; 0x5ae <__ultoa_invert+0x84>
 56e:	09 f4       	brne	.+2      	; 0x572 <__ultoa_invert+0x48>
 570:	68 94       	set
 572:	3f 91       	pop	r19
 574:	2a e0       	ldi	r18, 0x0A	; 10
 576:	26 9f       	mul	r18, r22
 578:	11 24       	eor	r1, r1
 57a:	30 19       	sub	r19, r0
 57c:	30 5d       	subi	r19, 0xD0	; 208
 57e:	31 93       	st	Z+, r19
 580:	de f6       	brtc	.-74     	; 0x538 <__ultoa_invert+0xe>
 582:	cf 01       	movw	r24, r30
 584:	08 95       	ret
 586:	46 2f       	mov	r20, r22
 588:	47 70       	andi	r20, 0x07	; 7
 58a:	40 5d       	subi	r20, 0xD0	; 208
 58c:	41 93       	st	Z+, r20
 58e:	b3 e0       	ldi	r27, 0x03	; 3
 590:	0f d0       	rcall	.+30     	; 0x5b0 <__ultoa_invert+0x86>
 592:	c9 f7       	brne	.-14     	; 0x586 <__ultoa_invert+0x5c>
 594:	f6 cf       	rjmp	.-20     	; 0x582 <__ultoa_invert+0x58>
 596:	46 2f       	mov	r20, r22
 598:	4f 70       	andi	r20, 0x0F	; 15
 59a:	40 5d       	subi	r20, 0xD0	; 208
 59c:	4a 33       	cpi	r20, 0x3A	; 58
 59e:	18 f0       	brcs	.+6      	; 0x5a6 <__ultoa_invert+0x7c>
 5a0:	49 5d       	subi	r20, 0xD9	; 217
 5a2:	31 fd       	sbrc	r19, 1
 5a4:	40 52       	subi	r20, 0x20	; 32
 5a6:	41 93       	st	Z+, r20
 5a8:	02 d0       	rcall	.+4      	; 0x5ae <__ultoa_invert+0x84>
 5aa:	a9 f7       	brne	.-22     	; 0x596 <__ultoa_invert+0x6c>
 5ac:	ea cf       	rjmp	.-44     	; 0x582 <__ultoa_invert+0x58>
 5ae:	b4 e0       	ldi	r27, 0x04	; 4
 5b0:	a6 95       	lsr	r26
 5b2:	97 95       	ror	r25
 5b4:	87 95       	ror	r24
 5b6:	77 95       	ror	r23
 5b8:	67 95       	ror	r22
 5ba:	ba 95       	dec	r27
 5bc:	c9 f7       	brne	.-14     	; 0x5b0 <__ultoa_invert+0x86>
 5be:	00 97       	sbiw	r24, 0x00	; 0
 5c0:	61 05       	cpc	r22, r1
 5c2:	71 05       	cpc	r23, r1
 5c4:	08 95       	ret
 5c6:	9b 01       	movw	r18, r22
 5c8:	ac 01       	movw	r20, r24
 5ca:	0a 2e       	mov	r0, r26
 5cc:	06 94       	lsr	r0
 5ce:	57 95       	ror	r21
 5d0:	47 95       	ror	r20
 5d2:	37 95       	ror	r19
 5d4:	27 95       	ror	r18
 5d6:	ba 95       	dec	r27
 5d8:	c9 f7       	brne	.-14     	; 0x5cc <__ultoa_invert+0xa2>
 5da:	62 0f       	add	r22, r18
 5dc:	73 1f       	adc	r23, r19
 5de:	84 1f       	adc	r24, r20
 5e0:	95 1f       	adc	r25, r21
 5e2:	a0 1d       	adc	r26, r0
 5e4:	08 95       	ret

Disassembly of section .text.libgcc.prologue:

000009c4 <__prologue_saves__>:
 9c4:	2f 92       	push	r2
 9c6:	3f 92       	push	r3
 9c8:	4f 92       	push	r4
 9ca:	5f 92       	push	r5
 9cc:	6f 92       	push	r6
 9ce:	7f 92       	push	r7
 9d0:	8f 92       	push	r8
 9d2:	9f 92       	push	r9
 9d4:	af 92       	push	r10
 9d6:	bf 92       	push	r11
 9d8:	cf 92       	push	r12
 9da:	df 92       	push	r13
 9dc:	ef 92       	push	r14
 9de:	ff 92       	push	r15
 9e0:	0f 93       	push	r16
 9e2:	1f 93       	push	r17
 9e4:	cf 93       	push	r28
 9e6:	df 93       	push	r29
 9e8:	cd b7       	in	r28, 0x3d	; 61
 9ea:	de b7       	in	r29, 0x3e	; 62
 9ec:	ca 1b       	sub	r28, r26
 9ee:	db 0b       	sbc	r29, r27
 9f0:	0f b6       	in	r0, 0x3f	; 63
 9f2:	f8 94       	cli
 9f4:	de bf       	out	0x3e, r29	; 62
 9f6:	0f be       	out	0x3f, r0	; 63
 9f8:	cd bf       	out	0x3d, r28	; 61
 9fa:	09 94       	ijmp

Disassembly of section .text.libgcc.prologue:

00000a68 <__epilogue_restores__>:
 a68:	2a 88       	ldd	r2, Y+18	; 0x12
 a6a:	39 88       	ldd	r3, Y+17	; 0x11
 a6c:	48 88       	ldd	r4, Y+16	; 0x10
 a6e:	5f 84       	ldd	r5, Y+15	; 0x0f
 a70:	6e 84       	ldd	r6, Y+14	; 0x0e
 a72:	7d 84       	ldd	r7, Y+13	; 0x0d
 a74:	8c 84       	ldd	r8, Y+12	; 0x0c
 a76:	9b 84       	ldd	r9, Y+11	; 0x0b
 a78:	aa 84       	ldd	r10, Y+10	; 0x0a
 a7a:	b9 84       	ldd	r11, Y+9	; 0x09
 a7c:	c8 84       	ldd	r12, Y+8	; 0x08
 a7e:	df 80       	ldd	r13, Y+7	; 0x07
 a80:	ee 80       	ldd	r14, Y+6	; 0x06
 a82:	fd 80       	ldd	r15, Y+5	; 0x05
 a84:	0c 81       	ldd	r16, Y+4	; 0x04
 a86:	1b 81       	ldd	r17, Y+3	; 0x03
 a88:	aa 81       	ldd	r26, Y+2	; 0x02
 a8a:	b9 81       	ldd	r27, Y+1	; 0x01
 a8c:	ce 0f       	add	r28, r30
 a8e:	d1 1d       	adc	r29, r1
 a90:	0f b6       	in	r0, 0x3f	; 63
 a92:	f8 94       	cli
 a94:	de bf       	out	0x3e, r29	; 62
 a96:	0f be       	out	0x3f, r0	; 63
 a98:	cd bf       	out	0x3d, r28	; 61
 a9a:	ed 01       	movw	r28, r26
 a9c:	08 95       	ret
